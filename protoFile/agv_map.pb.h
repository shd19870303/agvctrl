// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agv_map.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_agv_5fmap_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_agv_5fmap_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_agv_5fmap_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_agv_5fmap_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[46]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_agv_5fmap_2eproto;
namespace agv_map {
class Area;
class AreaDefaultTypeInternal;
extern AreaDefaultTypeInternal _Area_default_instance_;
class AreaDesc;
class AreaDescDefaultTypeInternal;
extern AreaDescDefaultTypeInternal _AreaDesc_default_instance_;
class AreaDesc_DescEntry_DoNotUse;
class AreaDesc_DescEntry_DoNotUseDefaultTypeInternal;
extern AreaDesc_DescEntry_DoNotUseDefaultTypeInternal _AreaDesc_DescEntry_DoNotUse_default_instance_;
class Area_AgvNumEntry_DoNotUse;
class Area_AgvNumEntry_DoNotUseDefaultTypeInternal;
extern Area_AgvNumEntry_DoNotUseDefaultTypeInternal _Area_AgvNumEntry_DoNotUse_default_instance_;
class Area_Basic;
class Area_BasicDefaultTypeInternal;
extern Area_BasicDefaultTypeInternal _Area_Basic_default_instance_;
class Area_Coord;
class Area_CoordDefaultTypeInternal;
extern Area_CoordDefaultTypeInternal _Area_Coord_default_instance_;
class Area_ParamEntry_DoNotUse;
class Area_ParamEntry_DoNotUseDefaultTypeInternal;
extern Area_ParamEntry_DoNotUseDefaultTypeInternal _Area_ParamEntry_DoNotUse_default_instance_;
class Area_TypeNumEntry_DoNotUse;
class Area_TypeNumEntry_DoNotUseDefaultTypeInternal;
extern Area_TypeNumEntry_DoNotUseDefaultTypeInternal _Area_TypeNumEntry_DoNotUse_default_instance_;
class Conf;
class ConfDefaultTypeInternal;
extern ConfDefaultTypeInternal _Conf_default_instance_;
class Describe;
class DescribeDefaultTypeInternal;
extern DescribeDefaultTypeInternal _Describe_default_instance_;
class Describe_AreaDescEntry_DoNotUse;
class Describe_AreaDescEntry_DoNotUseDefaultTypeInternal;
extern Describe_AreaDescEntry_DoNotUseDefaultTypeInternal _Describe_AreaDescEntry_DoNotUse_default_instance_;
class Describe_CargoAreaDescEntry_DoNotUse;
class Describe_CargoAreaDescEntry_DoNotUseDefaultTypeInternal;
extern Describe_CargoAreaDescEntry_DoNotUseDefaultTypeInternal _Describe_CargoAreaDescEntry_DoNotUse_default_instance_;
class Describe_FpointDescEntry_DoNotUse;
class Describe_FpointDescEntry_DoNotUseDefaultTypeInternal;
extern Describe_FpointDescEntry_DoNotUseDefaultTypeInternal _Describe_FpointDescEntry_DoNotUse_default_instance_;
class Describe_PointAgvDescEntry_DoNotUse;
class Describe_PointAgvDescEntry_DoNotUseDefaultTypeInternal;
extern Describe_PointAgvDescEntry_DoNotUseDefaultTypeInternal _Describe_PointAgvDescEntry_DoNotUse_default_instance_;
class Describe_PointAvoDescEntry_DoNotUse;
class Describe_PointAvoDescEntry_DoNotUseDefaultTypeInternal;
extern Describe_PointAvoDescEntry_DoNotUseDefaultTypeInternal _Describe_PointAvoDescEntry_DoNotUse_default_instance_;
class Describe_PointCtlDescEntry_DoNotUse;
class Describe_PointCtlDescEntry_DoNotUseDefaultTypeInternal;
extern Describe_PointCtlDescEntry_DoNotUseDefaultTypeInternal _Describe_PointCtlDescEntry_DoNotUse_default_instance_;
class Describe_SegAgvDescEntry_DoNotUse;
class Describe_SegAgvDescEntry_DoNotUseDefaultTypeInternal;
extern Describe_SegAgvDescEntry_DoNotUseDefaultTypeInternal _Describe_SegAgvDescEntry_DoNotUse_default_instance_;
class Describe_SegAvoDescEntry_DoNotUse;
class Describe_SegAvoDescEntry_DoNotUseDefaultTypeInternal;
extern Describe_SegAvoDescEntry_DoNotUseDefaultTypeInternal _Describe_SegAvoDescEntry_DoNotUse_default_instance_;
class Describe_SegCtlDescEntry_DoNotUse;
class Describe_SegCtlDescEntry_DoNotUseDefaultTypeInternal;
extern Describe_SegCtlDescEntry_DoNotUseDefaultTypeInternal _Describe_SegCtlDescEntry_DoNotUse_default_instance_;
class Fpoint;
class FpointDefaultTypeInternal;
extern FpointDefaultTypeInternal _Fpoint_default_instance_;
class Fpoint_Basic;
class Fpoint_BasicDefaultTypeInternal;
extern Fpoint_BasicDefaultTypeInternal _Fpoint_Basic_default_instance_;
class MAP_ARR;
class MAP_ARRDefaultTypeInternal;
extern MAP_ARRDefaultTypeInternal _MAP_ARR_default_instance_;
class MAP_ARR_StoreOffConfigEntry_DoNotUse;
class MAP_ARR_StoreOffConfigEntry_DoNotUseDefaultTypeInternal;
extern MAP_ARR_StoreOffConfigEntry_DoNotUseDefaultTypeInternal _MAP_ARR_StoreOffConfigEntry_DoNotUse_default_instance_;
class Map;
class MapDefaultTypeInternal;
extern MapDefaultTypeInternal _Map_default_instance_;
class Map_AreaEntry_DoNotUse;
class Map_AreaEntry_DoNotUseDefaultTypeInternal;
extern Map_AreaEntry_DoNotUseDefaultTypeInternal _Map_AreaEntry_DoNotUse_default_instance_;
class Map_FpointEntry_DoNotUse;
class Map_FpointEntry_DoNotUseDefaultTypeInternal;
extern Map_FpointEntry_DoNotUseDefaultTypeInternal _Map_FpointEntry_DoNotUse_default_instance_;
class Map_PointChargeListEntry_DoNotUse;
class Map_PointChargeListEntry_DoNotUseDefaultTypeInternal;
extern Map_PointChargeListEntry_DoNotUseDefaultTypeInternal _Map_PointChargeListEntry_DoNotUse_default_instance_;
class Map_PointEntry_DoNotUse;
class Map_PointEntry_DoNotUseDefaultTypeInternal;
extern Map_PointEntry_DoNotUseDefaultTypeInternal _Map_PointEntry_DoNotUse_default_instance_;
class Map_PointStopListEntry_DoNotUse;
class Map_PointStopListEntry_DoNotUseDefaultTypeInternal;
extern Map_PointStopListEntry_DoNotUseDefaultTypeInternal _Map_PointStopListEntry_DoNotUse_default_instance_;
class Map_SegmentEntry_DoNotUse;
class Map_SegmentEntry_DoNotUseDefaultTypeInternal;
extern Map_SegmentEntry_DoNotUseDefaultTypeInternal _Map_SegmentEntry_DoNotUse_default_instance_;
class Param;
class ParamDefaultTypeInternal;
extern ParamDefaultTypeInternal _Param_default_instance_;
class Point;
class PointDefaultTypeInternal;
extern PointDefaultTypeInternal _Point_default_instance_;
class Point_AgvParamEntry_DoNotUse;
class Point_AgvParamEntry_DoNotUseDefaultTypeInternal;
extern Point_AgvParamEntry_DoNotUseDefaultTypeInternal _Point_AgvParamEntry_DoNotUse_default_instance_;
class Point_AvoParamEntry_DoNotUse;
class Point_AvoParamEntry_DoNotUseDefaultTypeInternal;
extern Point_AvoParamEntry_DoNotUseDefaultTypeInternal _Point_AvoParamEntry_DoNotUse_default_instance_;
class Point_Basic;
class Point_BasicDefaultTypeInternal;
extern Point_BasicDefaultTypeInternal _Point_Basic_default_instance_;
class Point_CtlParamEntry_DoNotUse;
class Point_CtlParamEntry_DoNotUseDefaultTypeInternal;
extern Point_CtlParamEntry_DoNotUseDefaultTypeInternal _Point_CtlParamEntry_DoNotUse_default_instance_;
class Point_Sparam;
class Point_SparamDefaultTypeInternal;
extern Point_SparamDefaultTypeInternal _Point_Sparam_default_instance_;
class Point_StaParamEntry_DoNotUse;
class Point_StaParamEntry_DoNotUseDefaultTypeInternal;
extern Point_StaParamEntry_DoNotUseDefaultTypeInternal _Point_StaParamEntry_DoNotUse_default_instance_;
class Point_Tparam;
class Point_TparamDefaultTypeInternal;
extern Point_TparamDefaultTypeInternal _Point_Tparam_default_instance_;
class Segment;
class SegmentDefaultTypeInternal;
extern SegmentDefaultTypeInternal _Segment_default_instance_;
class Segment_AgvParamEntry_DoNotUse;
class Segment_AgvParamEntry_DoNotUseDefaultTypeInternal;
extern Segment_AgvParamEntry_DoNotUseDefaultTypeInternal _Segment_AgvParamEntry_DoNotUse_default_instance_;
class Segment_AvoParamEntry_DoNotUse;
class Segment_AvoParamEntry_DoNotUseDefaultTypeInternal;
extern Segment_AvoParamEntry_DoNotUseDefaultTypeInternal _Segment_AvoParamEntry_DoNotUse_default_instance_;
class Segment_Basic;
class Segment_BasicDefaultTypeInternal;
extern Segment_BasicDefaultTypeInternal _Segment_Basic_default_instance_;
class Segment_CtlParamEntry_DoNotUse;
class Segment_CtlParamEntry_DoNotUseDefaultTypeInternal;
extern Segment_CtlParamEntry_DoNotUseDefaultTypeInternal _Segment_CtlParamEntry_DoNotUse_default_instance_;
class Store_offset;
class Store_offsetDefaultTypeInternal;
extern Store_offsetDefaultTypeInternal _Store_offset_default_instance_;
class store_offset_by_layer;
class store_offset_by_layerDefaultTypeInternal;
extern store_offset_by_layerDefaultTypeInternal _store_offset_by_layer_default_instance_;
}  // namespace agv_map
PROTOBUF_NAMESPACE_OPEN
template<> ::agv_map::Area* Arena::CreateMaybeMessage<::agv_map::Area>(Arena*);
template<> ::agv_map::AreaDesc* Arena::CreateMaybeMessage<::agv_map::AreaDesc>(Arena*);
template<> ::agv_map::AreaDesc_DescEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::AreaDesc_DescEntry_DoNotUse>(Arena*);
template<> ::agv_map::Area_AgvNumEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Area_AgvNumEntry_DoNotUse>(Arena*);
template<> ::agv_map::Area_Basic* Arena::CreateMaybeMessage<::agv_map::Area_Basic>(Arena*);
template<> ::agv_map::Area_Coord* Arena::CreateMaybeMessage<::agv_map::Area_Coord>(Arena*);
template<> ::agv_map::Area_ParamEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Area_ParamEntry_DoNotUse>(Arena*);
template<> ::agv_map::Area_TypeNumEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Area_TypeNumEntry_DoNotUse>(Arena*);
template<> ::agv_map::Conf* Arena::CreateMaybeMessage<::agv_map::Conf>(Arena*);
template<> ::agv_map::Describe* Arena::CreateMaybeMessage<::agv_map::Describe>(Arena*);
template<> ::agv_map::Describe_AreaDescEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Describe_AreaDescEntry_DoNotUse>(Arena*);
template<> ::agv_map::Describe_CargoAreaDescEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Describe_CargoAreaDescEntry_DoNotUse>(Arena*);
template<> ::agv_map::Describe_FpointDescEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Describe_FpointDescEntry_DoNotUse>(Arena*);
template<> ::agv_map::Describe_PointAgvDescEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Describe_PointAgvDescEntry_DoNotUse>(Arena*);
template<> ::agv_map::Describe_PointAvoDescEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Describe_PointAvoDescEntry_DoNotUse>(Arena*);
template<> ::agv_map::Describe_PointCtlDescEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Describe_PointCtlDescEntry_DoNotUse>(Arena*);
template<> ::agv_map::Describe_SegAgvDescEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Describe_SegAgvDescEntry_DoNotUse>(Arena*);
template<> ::agv_map::Describe_SegAvoDescEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Describe_SegAvoDescEntry_DoNotUse>(Arena*);
template<> ::agv_map::Describe_SegCtlDescEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Describe_SegCtlDescEntry_DoNotUse>(Arena*);
template<> ::agv_map::Fpoint* Arena::CreateMaybeMessage<::agv_map::Fpoint>(Arena*);
template<> ::agv_map::Fpoint_Basic* Arena::CreateMaybeMessage<::agv_map::Fpoint_Basic>(Arena*);
template<> ::agv_map::MAP_ARR* Arena::CreateMaybeMessage<::agv_map::MAP_ARR>(Arena*);
template<> ::agv_map::MAP_ARR_StoreOffConfigEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::MAP_ARR_StoreOffConfigEntry_DoNotUse>(Arena*);
template<> ::agv_map::Map* Arena::CreateMaybeMessage<::agv_map::Map>(Arena*);
template<> ::agv_map::Map_AreaEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Map_AreaEntry_DoNotUse>(Arena*);
template<> ::agv_map::Map_FpointEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Map_FpointEntry_DoNotUse>(Arena*);
template<> ::agv_map::Map_PointChargeListEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Map_PointChargeListEntry_DoNotUse>(Arena*);
template<> ::agv_map::Map_PointEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Map_PointEntry_DoNotUse>(Arena*);
template<> ::agv_map::Map_PointStopListEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Map_PointStopListEntry_DoNotUse>(Arena*);
template<> ::agv_map::Map_SegmentEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Map_SegmentEntry_DoNotUse>(Arena*);
template<> ::agv_map::Param* Arena::CreateMaybeMessage<::agv_map::Param>(Arena*);
template<> ::agv_map::Point* Arena::CreateMaybeMessage<::agv_map::Point>(Arena*);
template<> ::agv_map::Point_AgvParamEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Point_AgvParamEntry_DoNotUse>(Arena*);
template<> ::agv_map::Point_AvoParamEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Point_AvoParamEntry_DoNotUse>(Arena*);
template<> ::agv_map::Point_Basic* Arena::CreateMaybeMessage<::agv_map::Point_Basic>(Arena*);
template<> ::agv_map::Point_CtlParamEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Point_CtlParamEntry_DoNotUse>(Arena*);
template<> ::agv_map::Point_Sparam* Arena::CreateMaybeMessage<::agv_map::Point_Sparam>(Arena*);
template<> ::agv_map::Point_StaParamEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Point_StaParamEntry_DoNotUse>(Arena*);
template<> ::agv_map::Point_Tparam* Arena::CreateMaybeMessage<::agv_map::Point_Tparam>(Arena*);
template<> ::agv_map::Segment* Arena::CreateMaybeMessage<::agv_map::Segment>(Arena*);
template<> ::agv_map::Segment_AgvParamEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Segment_AgvParamEntry_DoNotUse>(Arena*);
template<> ::agv_map::Segment_AvoParamEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Segment_AvoParamEntry_DoNotUse>(Arena*);
template<> ::agv_map::Segment_Basic* Arena::CreateMaybeMessage<::agv_map::Segment_Basic>(Arena*);
template<> ::agv_map::Segment_CtlParamEntry_DoNotUse* Arena::CreateMaybeMessage<::agv_map::Segment_CtlParamEntry_DoNotUse>(Arena*);
template<> ::agv_map::Store_offset* Arena::CreateMaybeMessage<::agv_map::Store_offset>(Arena*);
template<> ::agv_map::store_offset_by_layer* Arena::CreateMaybeMessage<::agv_map::store_offset_by_layer>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace agv_map {

// ===================================================================

class MAP_ARR_StoreOffConfigEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<MAP_ARR_StoreOffConfigEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Store_offset,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<MAP_ARR_StoreOffConfigEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Store_offset,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  MAP_ARR_StoreOffConfigEntry_DoNotUse();
  explicit MAP_ARR_StoreOffConfigEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const MAP_ARR_StoreOffConfigEntry_DoNotUse& other);
  static const MAP_ARR_StoreOffConfigEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MAP_ARR_StoreOffConfigEntry_DoNotUse*>(&_MAP_ARR_StoreOffConfigEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class MAP_ARR PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.MAP_ARR) */ {
 public:
  inline MAP_ARR() : MAP_ARR(nullptr) {}
  virtual ~MAP_ARR();

  MAP_ARR(const MAP_ARR& from);
  MAP_ARR(MAP_ARR&& from) noexcept
    : MAP_ARR() {
    *this = ::std::move(from);
  }

  inline MAP_ARR& operator=(const MAP_ARR& from) {
    CopyFrom(from);
    return *this;
  }
  inline MAP_ARR& operator=(MAP_ARR&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MAP_ARR& default_instance();

  static inline const MAP_ARR* internal_default_instance() {
    return reinterpret_cast<const MAP_ARR*>(
               &_MAP_ARR_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MAP_ARR& a, MAP_ARR& b) {
    a.Swap(&b);
  }
  inline void Swap(MAP_ARR* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MAP_ARR* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MAP_ARR* New() const final {
    return CreateMaybeMessage<MAP_ARR>(nullptr);
  }

  MAP_ARR* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MAP_ARR>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MAP_ARR& from);
  void MergeFrom(const MAP_ARR& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MAP_ARR* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.MAP_ARR";
  }
  protected:
  explicit MAP_ARR(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMapFieldNumber = 1,
    kStoreOffConfigFieldNumber = 3,
    kDescribeFieldNumber = 2,
  };
  // repeated .agv_map.Map map = 1;
  int map_size() const;
  private:
  int _internal_map_size() const;
  public:
  void clear_map();
  ::agv_map::Map* mutable_map(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Map >*
      mutable_map();
  private:
  const ::agv_map::Map& _internal_map(int index) const;
  ::agv_map::Map* _internal_add_map();
  public:
  const ::agv_map::Map& map(int index) const;
  ::agv_map::Map* add_map();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Map >&
      map() const;

  // map<int32, .agv_map.Store_offset> store_off_config = 3;
  int store_off_config_size() const;
  private:
  int _internal_store_off_config_size() const;
  public:
  void clear_store_off_config();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Store_offset >&
      _internal_store_off_config() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Store_offset >*
      _internal_mutable_store_off_config();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Store_offset >&
      store_off_config() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Store_offset >*
      mutable_store_off_config();

  // .agv_map.Describe describe = 2;
  bool has_describe() const;
  private:
  bool _internal_has_describe() const;
  public:
  void clear_describe();
  const ::agv_map::Describe& describe() const;
  ::agv_map::Describe* release_describe();
  ::agv_map::Describe* mutable_describe();
  void set_allocated_describe(::agv_map::Describe* describe);
  private:
  const ::agv_map::Describe& _internal_describe() const;
  ::agv_map::Describe* _internal_mutable_describe();
  public:
  void unsafe_arena_set_allocated_describe(
      ::agv_map::Describe* describe);
  ::agv_map::Describe* unsafe_arena_release_describe();

  // @@protoc_insertion_point(class_scope:agv_map.MAP_ARR)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Map > map_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      MAP_ARR_StoreOffConfigEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Store_offset,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> store_off_config_;
  ::agv_map::Describe* describe_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Map_PointEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Map_PointEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Map_PointEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  Map_PointEntry_DoNotUse();
  explicit Map_PointEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Map_PointEntry_DoNotUse& other);
  static const Map_PointEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Map_PointEntry_DoNotUse*>(&_Map_PointEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class Map_SegmentEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Map_SegmentEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Segment,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Map_SegmentEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Segment,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  Map_SegmentEntry_DoNotUse();
  explicit Map_SegmentEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Map_SegmentEntry_DoNotUse& other);
  static const Map_SegmentEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Map_SegmentEntry_DoNotUse*>(&_Map_SegmentEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[3];
  }

  public:
};

// -------------------------------------------------------------------

class Map_FpointEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Map_FpointEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Fpoint,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Map_FpointEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Fpoint,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  Map_FpointEntry_DoNotUse();
  explicit Map_FpointEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Map_FpointEntry_DoNotUse& other);
  static const Map_FpointEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Map_FpointEntry_DoNotUse*>(&_Map_FpointEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[4];
  }

  public:
};

// -------------------------------------------------------------------

class Map_AreaEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Map_AreaEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Area,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Map_AreaEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Area,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  Map_AreaEntry_DoNotUse();
  explicit Map_AreaEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Map_AreaEntry_DoNotUse& other);
  static const Map_AreaEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Map_AreaEntry_DoNotUse*>(&_Map_AreaEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[5];
  }

  public:
};

// -------------------------------------------------------------------

class Map_PointStopListEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Map_PointStopListEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Map_PointStopListEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  Map_PointStopListEntry_DoNotUse();
  explicit Map_PointStopListEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Map_PointStopListEntry_DoNotUse& other);
  static const Map_PointStopListEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Map_PointStopListEntry_DoNotUse*>(&_Map_PointStopListEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[6];
  }

  public:
};

// -------------------------------------------------------------------

class Map_PointChargeListEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Map_PointChargeListEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Map_PointChargeListEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  Map_PointChargeListEntry_DoNotUse();
  explicit Map_PointChargeListEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Map_PointChargeListEntry_DoNotUse& other);
  static const Map_PointChargeListEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Map_PointChargeListEntry_DoNotUse*>(&_Map_PointChargeListEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[7];
  }

  public:
};

// -------------------------------------------------------------------

class Map PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Map) */ {
 public:
  inline Map() : Map(nullptr) {}
  virtual ~Map();

  Map(const Map& from);
  Map(Map&& from) noexcept
    : Map() {
    *this = ::std::move(from);
  }

  inline Map& operator=(const Map& from) {
    CopyFrom(from);
    return *this;
  }
  inline Map& operator=(Map&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Map& default_instance();

  static inline const Map* internal_default_instance() {
    return reinterpret_cast<const Map*>(
               &_Map_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Map& a, Map& b) {
    a.Swap(&b);
  }
  inline void Swap(Map* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Map* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Map* New() const final {
    return CreateMaybeMessage<Map>(nullptr);
  }

  Map* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Map>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Map& from);
  void MergeFrom(const Map& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Map* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Map";
  }
  protected:
  explicit Map(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kPointFieldNumber = 2,
    kSegmentFieldNumber = 3,
    kFpointFieldNumber = 4,
    kAreaFieldNumber = 5,
    kPointStopListFieldNumber = 6,
    kPointChargeListFieldNumber = 7,
    kConfFieldNumber = 1,
  };
  // map<int32, .agv_map.Point> point = 2;
  int point_size() const;
  private:
  int _internal_point_size() const;
  public:
  void clear_point();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >&
      _internal_point() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >*
      _internal_mutable_point();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >&
      point() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >*
      mutable_point();

  // map<int32, .agv_map.Segment> segment = 3;
  int segment_size() const;
  private:
  int _internal_segment_size() const;
  public:
  void clear_segment();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Segment >&
      _internal_segment() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Segment >*
      _internal_mutable_segment();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Segment >&
      segment() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Segment >*
      mutable_segment();

  // map<int32, .agv_map.Fpoint> fpoint = 4;
  int fpoint_size() const;
  private:
  int _internal_fpoint_size() const;
  public:
  void clear_fpoint();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Fpoint >&
      _internal_fpoint() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Fpoint >*
      _internal_mutable_fpoint();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Fpoint >&
      fpoint() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Fpoint >*
      mutable_fpoint();

  // map<int32, .agv_map.Area> area = 5;
  int area_size() const;
  private:
  int _internal_area_size() const;
  public:
  void clear_area();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Area >&
      _internal_area() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Area >*
      _internal_mutable_area();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Area >&
      area() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Area >*
      mutable_area();

  // map<int32, .agv_map.Point> point_stop_list = 6;
  int point_stop_list_size() const;
  private:
  int _internal_point_stop_list_size() const;
  public:
  void clear_point_stop_list();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >&
      _internal_point_stop_list() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >*
      _internal_mutable_point_stop_list();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >&
      point_stop_list() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >*
      mutable_point_stop_list();

  // map<int32, .agv_map.Point> point_charge_list = 7;
  int point_charge_list_size() const;
  private:
  int _internal_point_charge_list_size() const;
  public:
  void clear_point_charge_list();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >&
      _internal_point_charge_list() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >*
      _internal_mutable_point_charge_list();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >&
      point_charge_list() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >*
      mutable_point_charge_list();

  // .agv_map.Conf conf = 1;
  bool has_conf() const;
  private:
  bool _internal_has_conf() const;
  public:
  void clear_conf();
  const ::agv_map::Conf& conf() const;
  ::agv_map::Conf* release_conf();
  ::agv_map::Conf* mutable_conf();
  void set_allocated_conf(::agv_map::Conf* conf);
  private:
  const ::agv_map::Conf& _internal_conf() const;
  ::agv_map::Conf* _internal_mutable_conf();
  public:
  void unsafe_arena_set_allocated_conf(
      ::agv_map::Conf* conf);
  ::agv_map::Conf* unsafe_arena_release_conf();

  // @@protoc_insertion_point(class_scope:agv_map.Map)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Map_PointEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> point_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Map_SegmentEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Segment,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> segment_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Map_FpointEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Fpoint,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> fpoint_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Map_AreaEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Area,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> area_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Map_PointStopListEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> point_stop_list_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Map_PointChargeListEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> point_charge_list_;
  ::agv_map::Conf* conf_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Conf PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Conf) */ {
 public:
  inline Conf() : Conf(nullptr) {}
  virtual ~Conf();

  Conf(const Conf& from);
  Conf(Conf&& from) noexcept
    : Conf() {
    *this = ::std::move(from);
  }

  inline Conf& operator=(const Conf& from) {
    CopyFrom(from);
    return *this;
  }
  inline Conf& operator=(Conf&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Conf& default_instance();

  static inline const Conf* internal_default_instance() {
    return reinterpret_cast<const Conf*>(
               &_Conf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Conf& a, Conf& b) {
    a.Swap(&b);
  }
  inline void Swap(Conf* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Conf* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Conf* New() const final {
    return CreateMaybeMessage<Conf>(nullptr);
  }

  Conf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Conf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Conf& from);
  void MergeFrom(const Conf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Conf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Conf";
  }
  protected:
  explicit Conf(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMapNameFieldNumber = 4,
    kMapTsFieldNumber = 1,
    kMapPidFieldNumber = 2,
    kMapAreaFieldNumber = 3,
    kMaxPidFieldNumber = 5,
    kMaxSidFieldNumber = 6,
    kMaxAidFieldNumber = 7,
    kMaxFidFieldNumber = 8,
  };
  // string map_name = 4;
  void clear_map_name();
  const std::string& map_name() const;
  void set_map_name(const std::string& value);
  void set_map_name(std::string&& value);
  void set_map_name(const char* value);
  void set_map_name(const char* value, size_t size);
  std::string* mutable_map_name();
  std::string* release_map_name();
  void set_allocated_map_name(std::string* map_name);
  private:
  const std::string& _internal_map_name() const;
  void _internal_set_map_name(const std::string& value);
  std::string* _internal_mutable_map_name();
  public:

  // int64 map_ts = 1;
  void clear_map_ts();
  ::PROTOBUF_NAMESPACE_ID::int64 map_ts() const;
  void set_map_ts(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_map_ts() const;
  void _internal_set_map_ts(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 map_pid = 2;
  void clear_map_pid();
  ::PROTOBUF_NAMESPACE_ID::int32 map_pid() const;
  void set_map_pid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_map_pid() const;
  void _internal_set_map_pid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 map_area = 3;
  void clear_map_area();
  ::PROTOBUF_NAMESPACE_ID::int32 map_area() const;
  void set_map_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_map_area() const;
  void _internal_set_map_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 max_pid = 5;
  void clear_max_pid();
  ::PROTOBUF_NAMESPACE_ID::int32 max_pid() const;
  void set_max_pid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_max_pid() const;
  void _internal_set_max_pid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 max_sid = 6;
  void clear_max_sid();
  ::PROTOBUF_NAMESPACE_ID::int32 max_sid() const;
  void set_max_sid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_max_sid() const;
  void _internal_set_max_sid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 max_aid = 7;
  void clear_max_aid();
  ::PROTOBUF_NAMESPACE_ID::int32 max_aid() const;
  void set_max_aid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_max_aid() const;
  void _internal_set_max_aid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 max_fid = 8;
  void clear_max_fid();
  ::PROTOBUF_NAMESPACE_ID::int32 max_fid() const;
  void set_max_fid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_max_fid() const;
  void _internal_set_max_fid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:agv_map.Conf)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr map_name_;
  ::PROTOBUF_NAMESPACE_ID::int64 map_ts_;
  ::PROTOBUF_NAMESPACE_ID::int32 map_pid_;
  ::PROTOBUF_NAMESPACE_ID::int32 map_area_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_pid_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_sid_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_aid_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_fid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Point_AgvParamEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Point_AgvParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Point_AgvParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> SuperType;
  Point_AgvParamEntry_DoNotUse();
  explicit Point_AgvParamEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Point_AgvParamEntry_DoNotUse& other);
  static const Point_AgvParamEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Point_AgvParamEntry_DoNotUse*>(&_Point_AgvParamEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[10];
  }

  public:
};

// -------------------------------------------------------------------

class Point_CtlParamEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Point_CtlParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Point_CtlParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> SuperType;
  Point_CtlParamEntry_DoNotUse();
  explicit Point_CtlParamEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Point_CtlParamEntry_DoNotUse& other);
  static const Point_CtlParamEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Point_CtlParamEntry_DoNotUse*>(&_Point_CtlParamEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[11];
  }

  public:
};

// -------------------------------------------------------------------

class Point_AvoParamEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Point_AvoParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Point_AvoParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> SuperType;
  Point_AvoParamEntry_DoNotUse();
  explicit Point_AvoParamEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Point_AvoParamEntry_DoNotUse& other);
  static const Point_AvoParamEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Point_AvoParamEntry_DoNotUse*>(&_Point_AvoParamEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[12];
  }

  public:
};

// -------------------------------------------------------------------

class Point_StaParamEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Point_StaParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point_Sparam,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Point_StaParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point_Sparam,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  Point_StaParamEntry_DoNotUse();
  explicit Point_StaParamEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Point_StaParamEntry_DoNotUse& other);
  static const Point_StaParamEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Point_StaParamEntry_DoNotUse*>(&_Point_StaParamEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[13];
  }

  public:
};

// -------------------------------------------------------------------

class Point_Basic PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Point.Basic) */ {
 public:
  inline Point_Basic() : Point_Basic(nullptr) {}
  virtual ~Point_Basic();

  Point_Basic(const Point_Basic& from);
  Point_Basic(Point_Basic&& from) noexcept
    : Point_Basic() {
    *this = ::std::move(from);
  }

  inline Point_Basic& operator=(const Point_Basic& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point_Basic& operator=(Point_Basic&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Point_Basic& default_instance();

  static inline const Point_Basic* internal_default_instance() {
    return reinterpret_cast<const Point_Basic*>(
               &_Point_Basic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(Point_Basic& a, Point_Basic& b) {
    a.Swap(&b);
  }
  inline void Swap(Point_Basic* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point_Basic* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Point_Basic* New() const final {
    return CreateMaybeMessage<Point_Basic>(nullptr);
  }

  Point_Basic* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Point_Basic>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Point_Basic& from);
  void MergeFrom(const Point_Basic& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point_Basic* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Point.Basic";
  }
  protected:
  explicit Point_Basic(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kAreaNameFieldNumber = 10,
    kIdFieldNumber = 1,
    kTypeFieldNumber = 3,
    kXFieldNumber = 4,
    kYFieldNumber = 5,
    kGetHeightFieldNumber = 6,
    kPutHeightFieldNumber = 7,
    kRunHeightFieldNumber = 8,
    kAreaIdFieldNumber = 9,
    kQRcodeFieldNumber = 11,
    kStypeFieldNumber = 12,
    kAtypeFieldNumber = 13,
    kDisableFieldNumber = 14,
    kLockFieldNumber = 15,
    kFloorFieldNumber = 16,
    kAgvDirFieldNumber = 17,
    kConnectArcFieldNumber = 18,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string area_name = 10;
  void clear_area_name();
  const std::string& area_name() const;
  void set_area_name(const std::string& value);
  void set_area_name(std::string&& value);
  void set_area_name(const char* value);
  void set_area_name(const char* value, size_t size);
  std::string* mutable_area_name();
  std::string* release_area_name();
  void set_allocated_area_name(std::string* area_name);
  private:
  const std::string& _internal_area_name() const;
  void _internal_set_area_name(const std::string& value);
  std::string* _internal_mutable_area_name();
  public:

  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 3;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 x = 4;
  void clear_x();
  ::PROTOBUF_NAMESPACE_ID::int32 x() const;
  void set_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_x() const;
  void _internal_set_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 y = 5;
  void clear_y();
  ::PROTOBUF_NAMESPACE_ID::int32 y() const;
  void set_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_y() const;
  void _internal_set_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 get_height = 6;
  void clear_get_height();
  ::PROTOBUF_NAMESPACE_ID::int32 get_height() const;
  void set_get_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_get_height() const;
  void _internal_set_get_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 put_height = 7;
  void clear_put_height();
  ::PROTOBUF_NAMESPACE_ID::int32 put_height() const;
  void set_put_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_put_height() const;
  void _internal_set_put_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 run_height = 8;
  void clear_run_height();
  ::PROTOBUF_NAMESPACE_ID::int32 run_height() const;
  void set_run_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_run_height() const;
  void _internal_set_run_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 area_id = 9;
  void clear_area_id();
  ::PROTOBUF_NAMESPACE_ID::int32 area_id() const;
  void set_area_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_area_id() const;
  void _internal_set_area_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 QRcode = 11;
  void clear_qrcode();
  ::PROTOBUF_NAMESPACE_ID::int32 qrcode() const;
  void set_qrcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_qrcode() const;
  void _internal_set_qrcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 stype = 12;
  void clear_stype();
  ::PROTOBUF_NAMESPACE_ID::int32 stype() const;
  void set_stype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_stype() const;
  void _internal_set_stype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 atype = 13;
  void clear_atype();
  ::PROTOBUF_NAMESPACE_ID::int32 atype() const;
  void set_atype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_atype() const;
  void _internal_set_atype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 disable = 14;
  void clear_disable();
  ::PROTOBUF_NAMESPACE_ID::int32 disable() const;
  void set_disable(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_disable() const;
  void _internal_set_disable(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 lock = 15;
  void clear_lock();
  ::PROTOBUF_NAMESPACE_ID::int32 lock() const;
  void set_lock(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_lock() const;
  void _internal_set_lock(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 floor = 16;
  void clear_floor();
  ::PROTOBUF_NAMESPACE_ID::int32 floor() const;
  void set_floor(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_floor() const;
  void _internal_set_floor(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 agv_dir = 17;
  void clear_agv_dir();
  ::PROTOBUF_NAMESPACE_ID::int32 agv_dir() const;
  void set_agv_dir(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_agv_dir() const;
  void _internal_set_agv_dir(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 connect_arc = 18;
  void clear_connect_arc();
  ::PROTOBUF_NAMESPACE_ID::int32 connect_arc() const;
  void set_connect_arc(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_connect_arc() const;
  void _internal_set_connect_arc(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:agv_map.Point.Basic)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr area_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 x_;
  ::PROTOBUF_NAMESPACE_ID::int32 y_;
  ::PROTOBUF_NAMESPACE_ID::int32 get_height_;
  ::PROTOBUF_NAMESPACE_ID::int32 put_height_;
  ::PROTOBUF_NAMESPACE_ID::int32 run_height_;
  ::PROTOBUF_NAMESPACE_ID::int32 area_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 qrcode_;
  ::PROTOBUF_NAMESPACE_ID::int32 stype_;
  ::PROTOBUF_NAMESPACE_ID::int32 atype_;
  ::PROTOBUF_NAMESPACE_ID::int32 disable_;
  ::PROTOBUF_NAMESPACE_ID::int32 lock_;
  ::PROTOBUF_NAMESPACE_ID::int32 floor_;
  ::PROTOBUF_NAMESPACE_ID::int32 agv_dir_;
  ::PROTOBUF_NAMESPACE_ID::int32 connect_arc_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Point_Sparam PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Point.Sparam) */ {
 public:
  inline Point_Sparam() : Point_Sparam(nullptr) {}
  virtual ~Point_Sparam();

  Point_Sparam(const Point_Sparam& from);
  Point_Sparam(Point_Sparam&& from) noexcept
    : Point_Sparam() {
    *this = ::std::move(from);
  }

  inline Point_Sparam& operator=(const Point_Sparam& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point_Sparam& operator=(Point_Sparam&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Point_Sparam& default_instance();

  static inline const Point_Sparam* internal_default_instance() {
    return reinterpret_cast<const Point_Sparam*>(
               &_Point_Sparam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(Point_Sparam& a, Point_Sparam& b) {
    a.Swap(&b);
  }
  inline void Swap(Point_Sparam* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point_Sparam* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Point_Sparam* New() const final {
    return CreateMaybeMessage<Point_Sparam>(nullptr);
  }

  Point_Sparam* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Point_Sparam>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Point_Sparam& from);
  void MergeFrom(const Point_Sparam& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point_Sparam* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Point.Sparam";
  }
  protected:
  explicit Point_Sparam(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLayersFieldNumber = 1,
    kHorizonOffsetFieldNumber = 2,
    kVerticalOffsetFieldNumber = 3,
    kGetHeightFieldNumber = 4,
    kPutHeightFieldNumber = 5,
    kRunHeightFieldNumber = 6,
  };
  // int32 layers = 1;
  void clear_layers();
  ::PROTOBUF_NAMESPACE_ID::int32 layers() const;
  void set_layers(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_layers() const;
  void _internal_set_layers(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 horizon_offset = 2;
  void clear_horizon_offset();
  ::PROTOBUF_NAMESPACE_ID::int32 horizon_offset() const;
  void set_horizon_offset(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_horizon_offset() const;
  void _internal_set_horizon_offset(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 vertical_offset = 3;
  void clear_vertical_offset();
  ::PROTOBUF_NAMESPACE_ID::int32 vertical_offset() const;
  void set_vertical_offset(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vertical_offset() const;
  void _internal_set_vertical_offset(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 get_height = 4;
  void clear_get_height();
  ::PROTOBUF_NAMESPACE_ID::int32 get_height() const;
  void set_get_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_get_height() const;
  void _internal_set_get_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 put_height = 5;
  void clear_put_height();
  ::PROTOBUF_NAMESPACE_ID::int32 put_height() const;
  void set_put_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_put_height() const;
  void _internal_set_put_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 run_height = 6;
  void clear_run_height();
  ::PROTOBUF_NAMESPACE_ID::int32 run_height() const;
  void set_run_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_run_height() const;
  void _internal_set_run_height(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:agv_map.Point.Sparam)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 layers_;
  ::PROTOBUF_NAMESPACE_ID::int32 horizon_offset_;
  ::PROTOBUF_NAMESPACE_ID::int32 vertical_offset_;
  ::PROTOBUF_NAMESPACE_ID::int32 get_height_;
  ::PROTOBUF_NAMESPACE_ID::int32 put_height_;
  ::PROTOBUF_NAMESPACE_ID::int32 run_height_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Point_Tparam PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Point.Tparam) */ {
 public:
  inline Point_Tparam() : Point_Tparam(nullptr) {}
  virtual ~Point_Tparam();

  Point_Tparam(const Point_Tparam& from);
  Point_Tparam(Point_Tparam&& from) noexcept
    : Point_Tparam() {
    *this = ::std::move(from);
  }

  inline Point_Tparam& operator=(const Point_Tparam& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point_Tparam& operator=(Point_Tparam&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Point_Tparam& default_instance();

  static inline const Point_Tparam* internal_default_instance() {
    return reinterpret_cast<const Point_Tparam*>(
               &_Point_Tparam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(Point_Tparam& a, Point_Tparam& b) {
    a.Swap(&b);
  }
  inline void Swap(Point_Tparam* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point_Tparam* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Point_Tparam* New() const final {
    return CreateMaybeMessage<Point_Tparam>(nullptr);
  }

  Point_Tparam* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Point_Tparam>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Point_Tparam& from);
  void MergeFrom(const Point_Tparam& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point_Tparam* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Point.Tparam";
  }
  protected:
  explicit Point_Tparam(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnableFieldNumber = 1,
    kTypeFieldNumber = 2,
    kIntervalFieldNumber = 3,
    kOffsetFieldNumber = 4,
    kTargetAreaFieldNumber = 5,
    kTargetStaFieldNumber = 6,
  };
  // int32 enable = 1;
  void clear_enable();
  ::PROTOBUF_NAMESPACE_ID::int32 enable() const;
  void set_enable(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_enable() const;
  void _internal_set_enable(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 2;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 interval = 3;
  void clear_interval();
  ::PROTOBUF_NAMESPACE_ID::int32 interval() const;
  void set_interval(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_interval() const;
  void _internal_set_interval(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 offset = 4;
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::int32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 target_area = 5;
  void clear_target_area();
  ::PROTOBUF_NAMESPACE_ID::int32 target_area() const;
  void set_target_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target_area() const;
  void _internal_set_target_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 target_sta = 6;
  void clear_target_sta();
  ::PROTOBUF_NAMESPACE_ID::int32 target_sta() const;
  void set_target_sta(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target_sta() const;
  void _internal_set_target_sta(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:agv_map.Point.Tparam)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 enable_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 interval_;
  ::PROTOBUF_NAMESPACE_ID::int32 offset_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_area_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_sta_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Point PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Point) */ {
 public:
  inline Point() : Point(nullptr) {}
  virtual ~Point();

  Point(const Point& from);
  Point(Point&& from) noexcept
    : Point() {
    *this = ::std::move(from);
  }

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point& operator=(Point&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Point& default_instance();

  static inline const Point* internal_default_instance() {
    return reinterpret_cast<const Point*>(
               &_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(Point& a, Point& b) {
    a.Swap(&b);
  }
  inline void Swap(Point* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Point* New() const final {
    return CreateMaybeMessage<Point>(nullptr);
  }

  Point* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Point>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Point";
  }
  protected:
  explicit Point(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Point_Basic Basic;
  typedef Point_Sparam Sparam;
  typedef Point_Tparam Tparam;

  // accessors -------------------------------------------------------

  enum : int {
    kAgvParamFieldNumber = 2,
    kCtlParamFieldNumber = 3,
    kAvoParamFieldNumber = 4,
    kSegIdFieldNumber = 5,
    kStaParamFieldNumber = 6,
    kInAreaFieldNumber = 8,
    kGetAddSegFieldNumber = 9,
    kPutAddSegFieldNumber = 10,
    kBasicFieldNumber = 1,
    kTestParamFieldNumber = 7,
  };
  // map<int32, sint32> agv_param = 2;
  int agv_param_size() const;
  private:
  int _internal_agv_param_size() const;
  public:
  void clear_agv_param();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_agv_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_agv_param();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      agv_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_agv_param();

  // map<int32, sint32> ctl_param = 3;
  int ctl_param_size() const;
  private:
  int _internal_ctl_param_size() const;
  public:
  void clear_ctl_param();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_ctl_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_ctl_param();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      ctl_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_ctl_param();

  // map<int32, sint32> avo_param = 4;
  int avo_param_size() const;
  private:
  int _internal_avo_param_size() const;
  public:
  void clear_avo_param();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_avo_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_avo_param();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      avo_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_avo_param();

  // repeated int32 seg_id = 5;
  int seg_id_size() const;
  private:
  int _internal_seg_id_size() const;
  public:
  void clear_seg_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_seg_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_seg_id() const;
  void _internal_add_seg_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_seg_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 seg_id(int index) const;
  void set_seg_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_seg_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      seg_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_seg_id();

  // map<int32, .agv_map.Point.Sparam> sta_param = 6;
  int sta_param_size() const;
  private:
  int _internal_sta_param_size() const;
  public:
  void clear_sta_param();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point_Sparam >&
      _internal_sta_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point_Sparam >*
      _internal_mutable_sta_param();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point_Sparam >&
      sta_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point_Sparam >*
      mutable_sta_param();

  // repeated int32 in_area = 8;
  int in_area_size() const;
  private:
  int _internal_in_area_size() const;
  public:
  void clear_in_area();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_in_area(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_in_area() const;
  void _internal_add_in_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_in_area();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 in_area(int index) const;
  void set_in_area(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_in_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      in_area() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_in_area();

  // repeated int32 get_add_seg = 9;
  int get_add_seg_size() const;
  private:
  int _internal_get_add_seg_size() const;
  public:
  void clear_get_add_seg();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_get_add_seg(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_get_add_seg() const;
  void _internal_add_get_add_seg(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_get_add_seg();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 get_add_seg(int index) const;
  void set_get_add_seg(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_get_add_seg(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      get_add_seg() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_get_add_seg();

  // repeated int32 put_add_seg = 10;
  int put_add_seg_size() const;
  private:
  int _internal_put_add_seg_size() const;
  public:
  void clear_put_add_seg();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_put_add_seg(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_put_add_seg() const;
  void _internal_add_put_add_seg(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_put_add_seg();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 put_add_seg(int index) const;
  void set_put_add_seg(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_put_add_seg(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      put_add_seg() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_put_add_seg();

  // .agv_map.Point.Basic basic = 1;
  bool has_basic() const;
  private:
  bool _internal_has_basic() const;
  public:
  void clear_basic();
  const ::agv_map::Point_Basic& basic() const;
  ::agv_map::Point_Basic* release_basic();
  ::agv_map::Point_Basic* mutable_basic();
  void set_allocated_basic(::agv_map::Point_Basic* basic);
  private:
  const ::agv_map::Point_Basic& _internal_basic() const;
  ::agv_map::Point_Basic* _internal_mutable_basic();
  public:
  void unsafe_arena_set_allocated_basic(
      ::agv_map::Point_Basic* basic);
  ::agv_map::Point_Basic* unsafe_arena_release_basic();

  // .agv_map.Point.Tparam test_param = 7;
  bool has_test_param() const;
  private:
  bool _internal_has_test_param() const;
  public:
  void clear_test_param();
  const ::agv_map::Point_Tparam& test_param() const;
  ::agv_map::Point_Tparam* release_test_param();
  ::agv_map::Point_Tparam* mutable_test_param();
  void set_allocated_test_param(::agv_map::Point_Tparam* test_param);
  private:
  const ::agv_map::Point_Tparam& _internal_test_param() const;
  ::agv_map::Point_Tparam* _internal_mutable_test_param();
  public:
  void unsafe_arena_set_allocated_test_param(
      ::agv_map::Point_Tparam* test_param);
  ::agv_map::Point_Tparam* unsafe_arena_release_test_param();

  // @@protoc_insertion_point(class_scope:agv_map.Point)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Point_AgvParamEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> agv_param_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Point_CtlParamEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> ctl_param_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Point_AvoParamEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> avo_param_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > seg_id_;
  mutable std::atomic<int> _seg_id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Point_StaParamEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point_Sparam,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> sta_param_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > in_area_;
  mutable std::atomic<int> _in_area_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > get_add_seg_;
  mutable std::atomic<int> _get_add_seg_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > put_add_seg_;
  mutable std::atomic<int> _put_add_seg_cached_byte_size_;
  ::agv_map::Point_Basic* basic_;
  ::agv_map::Point_Tparam* test_param_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Segment_AgvParamEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Segment_AgvParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Segment_AgvParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> SuperType;
  Segment_AgvParamEntry_DoNotUse();
  explicit Segment_AgvParamEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Segment_AgvParamEntry_DoNotUse& other);
  static const Segment_AgvParamEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Segment_AgvParamEntry_DoNotUse*>(&_Segment_AgvParamEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[18];
  }

  public:
};

// -------------------------------------------------------------------

class Segment_CtlParamEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Segment_CtlParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Segment_CtlParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> SuperType;
  Segment_CtlParamEntry_DoNotUse();
  explicit Segment_CtlParamEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Segment_CtlParamEntry_DoNotUse& other);
  static const Segment_CtlParamEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Segment_CtlParamEntry_DoNotUse*>(&_Segment_CtlParamEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[19];
  }

  public:
};

// -------------------------------------------------------------------

class Segment_AvoParamEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Segment_AvoParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Segment_AvoParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> SuperType;
  Segment_AvoParamEntry_DoNotUse();
  explicit Segment_AvoParamEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Segment_AvoParamEntry_DoNotUse& other);
  static const Segment_AvoParamEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Segment_AvoParamEntry_DoNotUse*>(&_Segment_AvoParamEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[20];
  }

  public:
};

// -------------------------------------------------------------------

class Segment_Basic PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Segment.Basic) */ {
 public:
  inline Segment_Basic() : Segment_Basic(nullptr) {}
  virtual ~Segment_Basic();

  Segment_Basic(const Segment_Basic& from);
  Segment_Basic(Segment_Basic&& from) noexcept
    : Segment_Basic() {
    *this = ::std::move(from);
  }

  inline Segment_Basic& operator=(const Segment_Basic& from) {
    CopyFrom(from);
    return *this;
  }
  inline Segment_Basic& operator=(Segment_Basic&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Segment_Basic& default_instance();

  static inline const Segment_Basic* internal_default_instance() {
    return reinterpret_cast<const Segment_Basic*>(
               &_Segment_Basic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(Segment_Basic& a, Segment_Basic& b) {
    a.Swap(&b);
  }
  inline void Swap(Segment_Basic* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Segment_Basic* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Segment_Basic* New() const final {
    return CreateMaybeMessage<Segment_Basic>(nullptr);
  }

  Segment_Basic* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Segment_Basic>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Segment_Basic& from);
  void MergeFrom(const Segment_Basic& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Segment_Basic* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Segment.Basic";
  }
  protected:
  explicit Segment_Basic(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kStartIdFieldNumber = 2,
    kStartXFieldNumber = 3,
    kStartYFieldNumber = 4,
    kEndIdFieldNumber = 5,
    kEndXFieldNumber = 6,
    kEndYFieldNumber = 7,
    kCenXFieldNumber = 8,
    kCenYFieldNumber = 9,
    kRadiusFieldNumber = 10,
    kSeglenFieldNumber = 11,
    kTypeFieldNumber = 12,
    kDirModeFieldNumber = 13,
    kStartAngleFieldNumber = 14,
    kAgvTypeFieldNumber = 16,
    kEndAngleFieldNumber = 15,
    kDisableFieldNumber = 17,
    kLockFieldNumber = 18,
    kFloorFieldNumber = 19,
  };
  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 start_id = 2;
  void clear_start_id();
  ::PROTOBUF_NAMESPACE_ID::int32 start_id() const;
  void set_start_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_start_id() const;
  void _internal_set_start_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 start_x = 3;
  void clear_start_x();
  ::PROTOBUF_NAMESPACE_ID::int32 start_x() const;
  void set_start_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_start_x() const;
  void _internal_set_start_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 start_y = 4;
  void clear_start_y();
  ::PROTOBUF_NAMESPACE_ID::int32 start_y() const;
  void set_start_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_start_y() const;
  void _internal_set_start_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 end_id = 5;
  void clear_end_id();
  ::PROTOBUF_NAMESPACE_ID::int32 end_id() const;
  void set_end_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_end_id() const;
  void _internal_set_end_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 end_x = 6;
  void clear_end_x();
  ::PROTOBUF_NAMESPACE_ID::int32 end_x() const;
  void set_end_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_end_x() const;
  void _internal_set_end_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 end_y = 7;
  void clear_end_y();
  ::PROTOBUF_NAMESPACE_ID::int32 end_y() const;
  void set_end_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_end_y() const;
  void _internal_set_end_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 cen_x = 8;
  void clear_cen_x();
  ::PROTOBUF_NAMESPACE_ID::int32 cen_x() const;
  void set_cen_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cen_x() const;
  void _internal_set_cen_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 cen_y = 9;
  void clear_cen_y();
  ::PROTOBUF_NAMESPACE_ID::int32 cen_y() const;
  void set_cen_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cen_y() const;
  void _internal_set_cen_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 radius = 10;
  void clear_radius();
  ::PROTOBUF_NAMESPACE_ID::int32 radius() const;
  void set_radius(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_radius() const;
  void _internal_set_radius(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 seglen = 11;
  void clear_seglen();
  ::PROTOBUF_NAMESPACE_ID::int32 seglen() const;
  void set_seglen(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_seglen() const;
  void _internal_set_seglen(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 12;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 dir_mode = 13;
  void clear_dir_mode();
  ::PROTOBUF_NAMESPACE_ID::int32 dir_mode() const;
  void set_dir_mode(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dir_mode() const;
  void _internal_set_dir_mode(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // float start_angle = 14;
  void clear_start_angle();
  float start_angle() const;
  void set_start_angle(float value);
  private:
  float _internal_start_angle() const;
  void _internal_set_start_angle(float value);
  public:

  // int64 agv_type = 16;
  void clear_agv_type();
  ::PROTOBUF_NAMESPACE_ID::int64 agv_type() const;
  void set_agv_type(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_agv_type() const;
  void _internal_set_agv_type(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // float end_angle = 15;
  void clear_end_angle();
  float end_angle() const;
  void set_end_angle(float value);
  private:
  float _internal_end_angle() const;
  void _internal_set_end_angle(float value);
  public:

  // int32 disable = 17;
  void clear_disable();
  ::PROTOBUF_NAMESPACE_ID::int32 disable() const;
  void set_disable(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_disable() const;
  void _internal_set_disable(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 lock = 18;
  void clear_lock();
  ::PROTOBUF_NAMESPACE_ID::int32 lock() const;
  void set_lock(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_lock() const;
  void _internal_set_lock(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 floor = 19;
  void clear_floor();
  ::PROTOBUF_NAMESPACE_ID::int32 floor() const;
  void set_floor(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_floor() const;
  void _internal_set_floor(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:agv_map.Segment.Basic)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 start_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 start_x_;
  ::PROTOBUF_NAMESPACE_ID::int32 start_y_;
  ::PROTOBUF_NAMESPACE_ID::int32 end_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 end_x_;
  ::PROTOBUF_NAMESPACE_ID::int32 end_y_;
  ::PROTOBUF_NAMESPACE_ID::int32 cen_x_;
  ::PROTOBUF_NAMESPACE_ID::int32 cen_y_;
  ::PROTOBUF_NAMESPACE_ID::int32 radius_;
  ::PROTOBUF_NAMESPACE_ID::int32 seglen_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 dir_mode_;
  float start_angle_;
  ::PROTOBUF_NAMESPACE_ID::int64 agv_type_;
  float end_angle_;
  ::PROTOBUF_NAMESPACE_ID::int32 disable_;
  ::PROTOBUF_NAMESPACE_ID::int32 lock_;
  ::PROTOBUF_NAMESPACE_ID::int32 floor_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Segment PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Segment) */ {
 public:
  inline Segment() : Segment(nullptr) {}
  virtual ~Segment();

  Segment(const Segment& from);
  Segment(Segment&& from) noexcept
    : Segment() {
    *this = ::std::move(from);
  }

  inline Segment& operator=(const Segment& from) {
    CopyFrom(from);
    return *this;
  }
  inline Segment& operator=(Segment&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Segment& default_instance();

  static inline const Segment* internal_default_instance() {
    return reinterpret_cast<const Segment*>(
               &_Segment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(Segment& a, Segment& b) {
    a.Swap(&b);
  }
  inline void Swap(Segment* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Segment* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Segment* New() const final {
    return CreateMaybeMessage<Segment>(nullptr);
  }

  Segment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Segment>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Segment& from);
  void MergeFrom(const Segment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Segment* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Segment";
  }
  protected:
  explicit Segment(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Segment_Basic Basic;

  // accessors -------------------------------------------------------

  enum : int {
    kAgvParamFieldNumber = 2,
    kCtlParamFieldNumber = 3,
    kAvoParamFieldNumber = 4,
    kBasicFieldNumber = 1,
  };
  // map<int32, sint32> agv_param = 2;
  int agv_param_size() const;
  private:
  int _internal_agv_param_size() const;
  public:
  void clear_agv_param();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_agv_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_agv_param();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      agv_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_agv_param();

  // map<int32, sint32> ctl_param = 3;
  int ctl_param_size() const;
  private:
  int _internal_ctl_param_size() const;
  public:
  void clear_ctl_param();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_ctl_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_ctl_param();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      ctl_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_ctl_param();

  // map<int32, sint32> avo_param = 4;
  int avo_param_size() const;
  private:
  int _internal_avo_param_size() const;
  public:
  void clear_avo_param();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_avo_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_avo_param();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      avo_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_avo_param();

  // .agv_map.Segment.Basic basic = 1;
  bool has_basic() const;
  private:
  bool _internal_has_basic() const;
  public:
  void clear_basic();
  const ::agv_map::Segment_Basic& basic() const;
  ::agv_map::Segment_Basic* release_basic();
  ::agv_map::Segment_Basic* mutable_basic();
  void set_allocated_basic(::agv_map::Segment_Basic* basic);
  private:
  const ::agv_map::Segment_Basic& _internal_basic() const;
  ::agv_map::Segment_Basic* _internal_mutable_basic();
  public:
  void unsafe_arena_set_allocated_basic(
      ::agv_map::Segment_Basic* basic);
  ::agv_map::Segment_Basic* unsafe_arena_release_basic();

  // @@protoc_insertion_point(class_scope:agv_map.Segment)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Segment_AgvParamEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> agv_param_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Segment_CtlParamEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> ctl_param_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Segment_AvoParamEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> avo_param_;
  ::agv_map::Segment_Basic* basic_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Fpoint_Basic PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Fpoint.Basic) */ {
 public:
  inline Fpoint_Basic() : Fpoint_Basic(nullptr) {}
  virtual ~Fpoint_Basic();

  Fpoint_Basic(const Fpoint_Basic& from);
  Fpoint_Basic(Fpoint_Basic&& from) noexcept
    : Fpoint_Basic() {
    *this = ::std::move(from);
  }

  inline Fpoint_Basic& operator=(const Fpoint_Basic& from) {
    CopyFrom(from);
    return *this;
  }
  inline Fpoint_Basic& operator=(Fpoint_Basic&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Fpoint_Basic& default_instance();

  static inline const Fpoint_Basic* internal_default_instance() {
    return reinterpret_cast<const Fpoint_Basic*>(
               &_Fpoint_Basic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(Fpoint_Basic& a, Fpoint_Basic& b) {
    a.Swap(&b);
  }
  inline void Swap(Fpoint_Basic* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Fpoint_Basic* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Fpoint_Basic* New() const final {
    return CreateMaybeMessage<Fpoint_Basic>(nullptr);
  }

  Fpoint_Basic* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Fpoint_Basic>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Fpoint_Basic& from);
  void MergeFrom(const Fpoint_Basic& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Fpoint_Basic* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Fpoint.Basic";
  }
  protected:
  explicit Fpoint_Basic(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 2;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:agv_map.Fpoint.Basic)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Fpoint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Fpoint) */ {
 public:
  inline Fpoint() : Fpoint(nullptr) {}
  virtual ~Fpoint();

  Fpoint(const Fpoint& from);
  Fpoint(Fpoint&& from) noexcept
    : Fpoint() {
    *this = ::std::move(from);
  }

  inline Fpoint& operator=(const Fpoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline Fpoint& operator=(Fpoint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Fpoint& default_instance();

  static inline const Fpoint* internal_default_instance() {
    return reinterpret_cast<const Fpoint*>(
               &_Fpoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(Fpoint& a, Fpoint& b) {
    a.Swap(&b);
  }
  inline void Swap(Fpoint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Fpoint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Fpoint* New() const final {
    return CreateMaybeMessage<Fpoint>(nullptr);
  }

  Fpoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Fpoint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Fpoint& from);
  void MergeFrom(const Fpoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Fpoint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Fpoint";
  }
  protected:
  explicit Fpoint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Fpoint_Basic Basic;

  // accessors -------------------------------------------------------

  enum : int {
    kParamFieldNumber = 2,
    kBasicFieldNumber = 1,
  };
  // repeated .agv_map.Param param = 2;
  int param_size() const;
  private:
  int _internal_param_size() const;
  public:
  void clear_param();
  ::agv_map::Param* mutable_param(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Param >*
      mutable_param();
  private:
  const ::agv_map::Param& _internal_param(int index) const;
  ::agv_map::Param* _internal_add_param();
  public:
  const ::agv_map::Param& param(int index) const;
  ::agv_map::Param* add_param();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Param >&
      param() const;

  // .agv_map.Fpoint.Basic basic = 1;
  bool has_basic() const;
  private:
  bool _internal_has_basic() const;
  public:
  void clear_basic();
  const ::agv_map::Fpoint_Basic& basic() const;
  ::agv_map::Fpoint_Basic* release_basic();
  ::agv_map::Fpoint_Basic* mutable_basic();
  void set_allocated_basic(::agv_map::Fpoint_Basic* basic);
  private:
  const ::agv_map::Fpoint_Basic& _internal_basic() const;
  ::agv_map::Fpoint_Basic* _internal_mutable_basic();
  public:
  void unsafe_arena_set_allocated_basic(
      ::agv_map::Fpoint_Basic* basic);
  ::agv_map::Fpoint_Basic* unsafe_arena_release_basic();

  // @@protoc_insertion_point(class_scope:agv_map.Fpoint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Param > param_;
  ::agv_map::Fpoint_Basic* basic_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Area_ParamEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Area_ParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Area_ParamEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> SuperType;
  Area_ParamEntry_DoNotUse();
  explicit Area_ParamEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Area_ParamEntry_DoNotUse& other);
  static const Area_ParamEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Area_ParamEntry_DoNotUse*>(&_Area_ParamEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[25];
  }

  public:
};

// -------------------------------------------------------------------

class Area_AgvNumEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Area_AgvNumEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Area_AgvNumEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> SuperType;
  Area_AgvNumEntry_DoNotUse();
  explicit Area_AgvNumEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Area_AgvNumEntry_DoNotUse& other);
  static const Area_AgvNumEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Area_AgvNumEntry_DoNotUse*>(&_Area_AgvNumEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[26];
  }

  public:
};

// -------------------------------------------------------------------

class Area_TypeNumEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Area_TypeNumEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Area_TypeNumEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> SuperType;
  Area_TypeNumEntry_DoNotUse();
  explicit Area_TypeNumEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Area_TypeNumEntry_DoNotUse& other);
  static const Area_TypeNumEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Area_TypeNumEntry_DoNotUse*>(&_Area_TypeNumEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[27];
  }

  public:
};

// -------------------------------------------------------------------

class Area_Basic PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Area.Basic) */ {
 public:
  inline Area_Basic() : Area_Basic(nullptr) {}
  virtual ~Area_Basic();

  Area_Basic(const Area_Basic& from);
  Area_Basic(Area_Basic&& from) noexcept
    : Area_Basic() {
    *this = ::std::move(from);
  }

  inline Area_Basic& operator=(const Area_Basic& from) {
    CopyFrom(from);
    return *this;
  }
  inline Area_Basic& operator=(Area_Basic&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Area_Basic& default_instance();

  static inline const Area_Basic* internal_default_instance() {
    return reinterpret_cast<const Area_Basic*>(
               &_Area_Basic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(Area_Basic& a, Area_Basic& b) {
    a.Swap(&b);
  }
  inline void Swap(Area_Basic* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Area_Basic* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Area_Basic* New() const final {
    return CreateMaybeMessage<Area_Basic>(nullptr);
  }

  Area_Basic* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Area_Basic>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Area_Basic& from);
  void MergeFrom(const Area_Basic& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Area_Basic* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Area.Basic";
  }
  protected:
  explicit Area_Basic(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // string name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // int32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 2;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:agv_map.Area.Basic)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Area_Coord PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Area.Coord) */ {
 public:
  inline Area_Coord() : Area_Coord(nullptr) {}
  virtual ~Area_Coord();

  Area_Coord(const Area_Coord& from);
  Area_Coord(Area_Coord&& from) noexcept
    : Area_Coord() {
    *this = ::std::move(from);
  }

  inline Area_Coord& operator=(const Area_Coord& from) {
    CopyFrom(from);
    return *this;
  }
  inline Area_Coord& operator=(Area_Coord&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Area_Coord& default_instance();

  static inline const Area_Coord* internal_default_instance() {
    return reinterpret_cast<const Area_Coord*>(
               &_Area_Coord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(Area_Coord& a, Area_Coord& b) {
    a.Swap(&b);
  }
  inline void Swap(Area_Coord* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Area_Coord* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Area_Coord* New() const final {
    return CreateMaybeMessage<Area_Coord>(nullptr);
  }

  Area_Coord* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Area_Coord>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Area_Coord& from);
  void MergeFrom(const Area_Coord& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Area_Coord* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Area.Coord";
  }
  protected:
  explicit Area_Coord(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // sint32 x = 1;
  void clear_x();
  ::PROTOBUF_NAMESPACE_ID::int32 x() const;
  void set_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_x() const;
  void _internal_set_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 y = 2;
  void clear_y();
  ::PROTOBUF_NAMESPACE_ID::int32 y() const;
  void set_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_y() const;
  void _internal_set_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:agv_map.Area.Coord)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 x_;
  ::PROTOBUF_NAMESPACE_ID::int32 y_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Area PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Area) */ {
 public:
  inline Area() : Area(nullptr) {}
  virtual ~Area();

  Area(const Area& from);
  Area(Area&& from) noexcept
    : Area() {
    *this = ::std::move(from);
  }

  inline Area& operator=(const Area& from) {
    CopyFrom(from);
    return *this;
  }
  inline Area& operator=(Area&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Area& default_instance();

  static inline const Area* internal_default_instance() {
    return reinterpret_cast<const Area*>(
               &_Area_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(Area& a, Area& b) {
    a.Swap(&b);
  }
  inline void Swap(Area* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Area* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Area* New() const final {
    return CreateMaybeMessage<Area>(nullptr);
  }

  Area* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Area>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Area& from);
  void MergeFrom(const Area& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Area* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Area";
  }
  protected:
  explicit Area(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Area_Basic Basic;
  typedef Area_Coord Coord;

  // accessors -------------------------------------------------------

  enum : int {
    kParamFieldNumber = 2,
    kCoordFieldNumber = 3,
    kPointInFieldNumber = 4,
    kAgvNumFieldNumber = 5,
    kRelateAreaFieldNumber = 6,
    kTypeNumFieldNumber = 7,
    kBasicFieldNumber = 1,
  };
  // map<int32, sint32> param = 2;
  int param_size() const;
  private:
  int _internal_param_size() const;
  public:
  void clear_param();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_param();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      param() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_param();

  // repeated .agv_map.Area.Coord coord = 3;
  int coord_size() const;
  private:
  int _internal_coord_size() const;
  public:
  void clear_coord();
  ::agv_map::Area_Coord* mutable_coord(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Area_Coord >*
      mutable_coord();
  private:
  const ::agv_map::Area_Coord& _internal_coord(int index) const;
  ::agv_map::Area_Coord* _internal_add_coord();
  public:
  const ::agv_map::Area_Coord& coord(int index) const;
  ::agv_map::Area_Coord* add_coord();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Area_Coord >&
      coord() const;

  // repeated int32 point_in = 4;
  int point_in_size() const;
  private:
  int _internal_point_in_size() const;
  public:
  void clear_point_in();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_point_in(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_point_in() const;
  void _internal_add_point_in(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_point_in();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 point_in(int index) const;
  void set_point_in(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_point_in(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      point_in() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_point_in();

  // map<int32, int32> agv_num = 5;
  int agv_num_size() const;
  private:
  int _internal_agv_num_size() const;
  public:
  void clear_agv_num();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_agv_num() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_agv_num();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      agv_num() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_agv_num();

  // repeated int32 relate_area = 6;
  int relate_area_size() const;
  private:
  int _internal_relate_area_size() const;
  public:
  void clear_relate_area();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_relate_area(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_relate_area() const;
  void _internal_add_relate_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_relate_area();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 relate_area(int index) const;
  void set_relate_area(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_relate_area(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      relate_area() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_relate_area();

  // map<int32, int32> type_num = 7;
  int type_num_size() const;
  private:
  int _internal_type_num_size() const;
  public:
  void clear_type_num();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_type_num() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_type_num();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      type_num() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_type_num();

  // .agv_map.Area.Basic basic = 1;
  bool has_basic() const;
  private:
  bool _internal_has_basic() const;
  public:
  void clear_basic();
  const ::agv_map::Area_Basic& basic() const;
  ::agv_map::Area_Basic* release_basic();
  ::agv_map::Area_Basic* mutable_basic();
  void set_allocated_basic(::agv_map::Area_Basic* basic);
  private:
  const ::agv_map::Area_Basic& _internal_basic() const;
  ::agv_map::Area_Basic* _internal_mutable_basic();
  public:
  void unsafe_arena_set_allocated_basic(
      ::agv_map::Area_Basic* basic);
  ::agv_map::Area_Basic* unsafe_arena_release_basic();

  // @@protoc_insertion_point(class_scope:agv_map.Area)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Area_ParamEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_SINT32> param_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Area_Coord > coord_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > point_in_;
  mutable std::atomic<int> _point_in_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Area_AgvNumEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> agv_num_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > relate_area_;
  mutable std::atomic<int> _relate_area_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Area_TypeNumEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> type_num_;
  ::agv_map::Area_Basic* basic_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Param PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Param) */ {
 public:
  inline Param() : Param(nullptr) {}
  virtual ~Param();

  Param(const Param& from);
  Param(Param&& from) noexcept
    : Param() {
    *this = ::std::move(from);
  }

  inline Param& operator=(const Param& from) {
    CopyFrom(from);
    return *this;
  }
  inline Param& operator=(Param&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Param& default_instance();

  static inline const Param* internal_default_instance() {
    return reinterpret_cast<const Param*>(
               &_Param_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(Param& a, Param& b) {
    a.Swap(&b);
  }
  inline void Swap(Param* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Param* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Param* New() const final {
    return CreateMaybeMessage<Param>(nullptr);
  }

  Param* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Param>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Param& from);
  void MergeFrom(const Param& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Param* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Param";
  }
  protected:
  explicit Param(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // int32 key = 1;
  void clear_key();
  ::PROTOBUF_NAMESPACE_ID::int32 key() const;
  void set_key(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_key() const;
  void _internal_set_key(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 value = 2;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:agv_map.Param)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 key_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Describe_PointAgvDescEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_PointAgvDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_PointAgvDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  Describe_PointAgvDescEntry_DoNotUse();
  explicit Describe_PointAgvDescEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Describe_PointAgvDescEntry_DoNotUse& other);
  static const Describe_PointAgvDescEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Describe_PointAgvDescEntry_DoNotUse*>(&_Describe_PointAgvDescEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "agv_map.Describe.PointAgvDescEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[32];
  }

  public:
};

// -------------------------------------------------------------------

class Describe_PointCtlDescEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_PointCtlDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_PointCtlDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  Describe_PointCtlDescEntry_DoNotUse();
  explicit Describe_PointCtlDescEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Describe_PointCtlDescEntry_DoNotUse& other);
  static const Describe_PointCtlDescEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Describe_PointCtlDescEntry_DoNotUse*>(&_Describe_PointCtlDescEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "agv_map.Describe.PointCtlDescEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[33];
  }

  public:
};

// -------------------------------------------------------------------

class Describe_PointAvoDescEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_PointAvoDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_PointAvoDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  Describe_PointAvoDescEntry_DoNotUse();
  explicit Describe_PointAvoDescEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Describe_PointAvoDescEntry_DoNotUse& other);
  static const Describe_PointAvoDescEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Describe_PointAvoDescEntry_DoNotUse*>(&_Describe_PointAvoDescEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "agv_map.Describe.PointAvoDescEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[34];
  }

  public:
};

// -------------------------------------------------------------------

class Describe_SegAgvDescEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_SegAgvDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_SegAgvDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  Describe_SegAgvDescEntry_DoNotUse();
  explicit Describe_SegAgvDescEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Describe_SegAgvDescEntry_DoNotUse& other);
  static const Describe_SegAgvDescEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Describe_SegAgvDescEntry_DoNotUse*>(&_Describe_SegAgvDescEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "agv_map.Describe.SegAgvDescEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[35];
  }

  public:
};

// -------------------------------------------------------------------

class Describe_SegCtlDescEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_SegCtlDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_SegCtlDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  Describe_SegCtlDescEntry_DoNotUse();
  explicit Describe_SegCtlDescEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Describe_SegCtlDescEntry_DoNotUse& other);
  static const Describe_SegCtlDescEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Describe_SegCtlDescEntry_DoNotUse*>(&_Describe_SegCtlDescEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "agv_map.Describe.SegCtlDescEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[36];
  }

  public:
};

// -------------------------------------------------------------------

class Describe_SegAvoDescEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_SegAvoDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_SegAvoDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  Describe_SegAvoDescEntry_DoNotUse();
  explicit Describe_SegAvoDescEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Describe_SegAvoDescEntry_DoNotUse& other);
  static const Describe_SegAvoDescEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Describe_SegAvoDescEntry_DoNotUse*>(&_Describe_SegAvoDescEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "agv_map.Describe.SegAvoDescEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[37];
  }

  public:
};

// -------------------------------------------------------------------

class Describe_FpointDescEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_FpointDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_FpointDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  Describe_FpointDescEntry_DoNotUse();
  explicit Describe_FpointDescEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Describe_FpointDescEntry_DoNotUse& other);
  static const Describe_FpointDescEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Describe_FpointDescEntry_DoNotUse*>(&_Describe_FpointDescEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "agv_map.Describe.FpointDescEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[38];
  }

  public:
};

// -------------------------------------------------------------------

class Describe_AreaDescEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_AreaDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::AreaDesc,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_AreaDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::AreaDesc,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  Describe_AreaDescEntry_DoNotUse();
  explicit Describe_AreaDescEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Describe_AreaDescEntry_DoNotUse& other);
  static const Describe_AreaDescEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Describe_AreaDescEntry_DoNotUse*>(&_Describe_AreaDescEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[39];
  }

  public:
};

// -------------------------------------------------------------------

class Describe_CargoAreaDescEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_CargoAreaDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Describe_CargoAreaDescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  Describe_CargoAreaDescEntry_DoNotUse();
  explicit Describe_CargoAreaDescEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Describe_CargoAreaDescEntry_DoNotUse& other);
  static const Describe_CargoAreaDescEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Describe_CargoAreaDescEntry_DoNotUse*>(&_Describe_CargoAreaDescEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "agv_map.Describe.CargoAreaDescEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[40];
  }

  public:
};

// -------------------------------------------------------------------

class Describe PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Describe) */ {
 public:
  inline Describe() : Describe(nullptr) {}
  virtual ~Describe();

  Describe(const Describe& from);
  Describe(Describe&& from) noexcept
    : Describe() {
    *this = ::std::move(from);
  }

  inline Describe& operator=(const Describe& from) {
    CopyFrom(from);
    return *this;
  }
  inline Describe& operator=(Describe&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Describe& default_instance();

  static inline const Describe* internal_default_instance() {
    return reinterpret_cast<const Describe*>(
               &_Describe_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(Describe& a, Describe& b) {
    a.Swap(&b);
  }
  inline void Swap(Describe* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Describe* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Describe* New() const final {
    return CreateMaybeMessage<Describe>(nullptr);
  }

  Describe* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Describe>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Describe& from);
  void MergeFrom(const Describe& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Describe* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Describe";
  }
  protected:
  explicit Describe(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kPointAgvDescFieldNumber = 1,
    kPointCtlDescFieldNumber = 2,
    kPointAvoDescFieldNumber = 3,
    kSegAgvDescFieldNumber = 4,
    kSegCtlDescFieldNumber = 5,
    kSegAvoDescFieldNumber = 6,
    kFpointDescFieldNumber = 7,
    kAreaDescFieldNumber = 8,
    kCargoAreaDescFieldNumber = 9,
  };
  // map<int32, string> point_agv_desc = 1;
  int point_agv_desc_size() const;
  private:
  int _internal_point_agv_desc_size() const;
  public:
  void clear_point_agv_desc();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      _internal_point_agv_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      _internal_mutable_point_agv_desc();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      point_agv_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      mutable_point_agv_desc();

  // map<int32, string> point_ctl_desc = 2;
  int point_ctl_desc_size() const;
  private:
  int _internal_point_ctl_desc_size() const;
  public:
  void clear_point_ctl_desc();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      _internal_point_ctl_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      _internal_mutable_point_ctl_desc();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      point_ctl_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      mutable_point_ctl_desc();

  // map<int32, string> point_avo_desc = 3;
  int point_avo_desc_size() const;
  private:
  int _internal_point_avo_desc_size() const;
  public:
  void clear_point_avo_desc();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      _internal_point_avo_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      _internal_mutable_point_avo_desc();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      point_avo_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      mutable_point_avo_desc();

  // map<int32, string> seg_agv_desc = 4;
  int seg_agv_desc_size() const;
  private:
  int _internal_seg_agv_desc_size() const;
  public:
  void clear_seg_agv_desc();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      _internal_seg_agv_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      _internal_mutable_seg_agv_desc();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      seg_agv_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      mutable_seg_agv_desc();

  // map<int32, string> seg_ctl_desc = 5;
  int seg_ctl_desc_size() const;
  private:
  int _internal_seg_ctl_desc_size() const;
  public:
  void clear_seg_ctl_desc();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      _internal_seg_ctl_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      _internal_mutable_seg_ctl_desc();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      seg_ctl_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      mutable_seg_ctl_desc();

  // map<int32, string> seg_avo_desc = 6;
  int seg_avo_desc_size() const;
  private:
  int _internal_seg_avo_desc_size() const;
  public:
  void clear_seg_avo_desc();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      _internal_seg_avo_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      _internal_mutable_seg_avo_desc();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      seg_avo_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      mutable_seg_avo_desc();

  // map<int32, string> fpoint_desc = 7;
  int fpoint_desc_size() const;
  private:
  int _internal_fpoint_desc_size() const;
  public:
  void clear_fpoint_desc();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      _internal_fpoint_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      _internal_mutable_fpoint_desc();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      fpoint_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      mutable_fpoint_desc();

  // map<int32, .agv_map.AreaDesc> area_desc = 8;
  int area_desc_size() const;
  private:
  int _internal_area_desc_size() const;
  public:
  void clear_area_desc();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::AreaDesc >&
      _internal_area_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::AreaDesc >*
      _internal_mutable_area_desc();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::AreaDesc >&
      area_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::AreaDesc >*
      mutable_area_desc();

  // map<int32, string> cargo_area_desc = 9;
  int cargo_area_desc_size() const;
  private:
  int _internal_cargo_area_desc_size() const;
  public:
  void clear_cargo_area_desc();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      _internal_cargo_area_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      _internal_mutable_cargo_area_desc();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      cargo_area_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      mutable_cargo_area_desc();

  // @@protoc_insertion_point(class_scope:agv_map.Describe)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Describe_PointAgvDescEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> point_agv_desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Describe_PointCtlDescEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> point_ctl_desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Describe_PointAvoDescEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> point_avo_desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Describe_SegAgvDescEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> seg_agv_desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Describe_SegCtlDescEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> seg_ctl_desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Describe_SegAvoDescEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> seg_avo_desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Describe_FpointDescEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> fpoint_desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Describe_AreaDescEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::AreaDesc,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> area_desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Describe_CargoAreaDescEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> cargo_area_desc_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class AreaDesc_DescEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<AreaDesc_DescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<AreaDesc_DescEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> SuperType;
  AreaDesc_DescEntry_DoNotUse();
  explicit AreaDesc_DescEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const AreaDesc_DescEntry_DoNotUse& other);
  static const AreaDesc_DescEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const AreaDesc_DescEntry_DoNotUse*>(&_AreaDesc_DescEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "agv_map.AreaDesc.DescEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[42];
  }

  public:
};

// -------------------------------------------------------------------

class AreaDesc PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.AreaDesc) */ {
 public:
  inline AreaDesc() : AreaDesc(nullptr) {}
  virtual ~AreaDesc();

  AreaDesc(const AreaDesc& from);
  AreaDesc(AreaDesc&& from) noexcept
    : AreaDesc() {
    *this = ::std::move(from);
  }

  inline AreaDesc& operator=(const AreaDesc& from) {
    CopyFrom(from);
    return *this;
  }
  inline AreaDesc& operator=(AreaDesc&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AreaDesc& default_instance();

  static inline const AreaDesc* internal_default_instance() {
    return reinterpret_cast<const AreaDesc*>(
               &_AreaDesc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(AreaDesc& a, AreaDesc& b) {
    a.Swap(&b);
  }
  inline void Swap(AreaDesc* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AreaDesc* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AreaDesc* New() const final {
    return CreateMaybeMessage<AreaDesc>(nullptr);
  }

  AreaDesc* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AreaDesc>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AreaDesc& from);
  void MergeFrom(const AreaDesc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AreaDesc* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.AreaDesc";
  }
  protected:
  explicit AreaDesc(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kDescFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // map<int32, string> desc = 2;
  int desc_size() const;
  private:
  int _internal_desc_size() const;
  public:
  void clear_desc();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      _internal_desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      _internal_mutable_desc();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
      desc() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
      mutable_desc();

  // string type = 1;
  void clear_type();
  const std::string& type() const;
  void set_type(const std::string& value);
  void set_type(std::string&& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  std::string* mutable_type();
  std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // @@protoc_insertion_point(class_scope:agv_map.AreaDesc)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      AreaDesc_DescEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING> desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class Store_offset PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.Store_offset) */ {
 public:
  inline Store_offset() : Store_offset(nullptr) {}
  virtual ~Store_offset();

  Store_offset(const Store_offset& from);
  Store_offset(Store_offset&& from) noexcept
    : Store_offset() {
    *this = ::std::move(from);
  }

  inline Store_offset& operator=(const Store_offset& from) {
    CopyFrom(from);
    return *this;
  }
  inline Store_offset& operator=(Store_offset&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Store_offset& default_instance();

  static inline const Store_offset* internal_default_instance() {
    return reinterpret_cast<const Store_offset*>(
               &_Store_offset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(Store_offset& a, Store_offset& b) {
    a.Swap(&b);
  }
  inline void Swap(Store_offset* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Store_offset* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Store_offset* New() const final {
    return CreateMaybeMessage<Store_offset>(nullptr);
  }

  Store_offset* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Store_offset>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Store_offset& from);
  void MergeFrom(const Store_offset& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Store_offset* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.Store_offset";
  }
  protected:
  explicit Store_offset(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLayer1FieldNumber = 1,
    kLayer2FieldNumber = 2,
    kLayer3FieldNumber = 3,
    kLayer4FieldNumber = 4,
  };
  // .agv_map.store_offset_by_layer layer1 = 1;
  bool has_layer1() const;
  private:
  bool _internal_has_layer1() const;
  public:
  void clear_layer1();
  const ::agv_map::store_offset_by_layer& layer1() const;
  ::agv_map::store_offset_by_layer* release_layer1();
  ::agv_map::store_offset_by_layer* mutable_layer1();
  void set_allocated_layer1(::agv_map::store_offset_by_layer* layer1);
  private:
  const ::agv_map::store_offset_by_layer& _internal_layer1() const;
  ::agv_map::store_offset_by_layer* _internal_mutable_layer1();
  public:
  void unsafe_arena_set_allocated_layer1(
      ::agv_map::store_offset_by_layer* layer1);
  ::agv_map::store_offset_by_layer* unsafe_arena_release_layer1();

  // .agv_map.store_offset_by_layer layer2 = 2;
  bool has_layer2() const;
  private:
  bool _internal_has_layer2() const;
  public:
  void clear_layer2();
  const ::agv_map::store_offset_by_layer& layer2() const;
  ::agv_map::store_offset_by_layer* release_layer2();
  ::agv_map::store_offset_by_layer* mutable_layer2();
  void set_allocated_layer2(::agv_map::store_offset_by_layer* layer2);
  private:
  const ::agv_map::store_offset_by_layer& _internal_layer2() const;
  ::agv_map::store_offset_by_layer* _internal_mutable_layer2();
  public:
  void unsafe_arena_set_allocated_layer2(
      ::agv_map::store_offset_by_layer* layer2);
  ::agv_map::store_offset_by_layer* unsafe_arena_release_layer2();

  // .agv_map.store_offset_by_layer layer3 = 3;
  bool has_layer3() const;
  private:
  bool _internal_has_layer3() const;
  public:
  void clear_layer3();
  const ::agv_map::store_offset_by_layer& layer3() const;
  ::agv_map::store_offset_by_layer* release_layer3();
  ::agv_map::store_offset_by_layer* mutable_layer3();
  void set_allocated_layer3(::agv_map::store_offset_by_layer* layer3);
  private:
  const ::agv_map::store_offset_by_layer& _internal_layer3() const;
  ::agv_map::store_offset_by_layer* _internal_mutable_layer3();
  public:
  void unsafe_arena_set_allocated_layer3(
      ::agv_map::store_offset_by_layer* layer3);
  ::agv_map::store_offset_by_layer* unsafe_arena_release_layer3();

  // .agv_map.store_offset_by_layer layer4 = 4;
  bool has_layer4() const;
  private:
  bool _internal_has_layer4() const;
  public:
  void clear_layer4();
  const ::agv_map::store_offset_by_layer& layer4() const;
  ::agv_map::store_offset_by_layer* release_layer4();
  ::agv_map::store_offset_by_layer* mutable_layer4();
  void set_allocated_layer4(::agv_map::store_offset_by_layer* layer4);
  private:
  const ::agv_map::store_offset_by_layer& _internal_layer4() const;
  ::agv_map::store_offset_by_layer* _internal_mutable_layer4();
  public:
  void unsafe_arena_set_allocated_layer4(
      ::agv_map::store_offset_by_layer* layer4);
  ::agv_map::store_offset_by_layer* unsafe_arena_release_layer4();

  // @@protoc_insertion_point(class_scope:agv_map.Store_offset)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::agv_map::store_offset_by_layer* layer1_;
  ::agv_map::store_offset_by_layer* layer2_;
  ::agv_map::store_offset_by_layer* layer3_;
  ::agv_map::store_offset_by_layer* layer4_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// -------------------------------------------------------------------

class store_offset_by_layer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:agv_map.store_offset_by_layer) */ {
 public:
  inline store_offset_by_layer() : store_offset_by_layer(nullptr) {}
  virtual ~store_offset_by_layer();

  store_offset_by_layer(const store_offset_by_layer& from);
  store_offset_by_layer(store_offset_by_layer&& from) noexcept
    : store_offset_by_layer() {
    *this = ::std::move(from);
  }

  inline store_offset_by_layer& operator=(const store_offset_by_layer& from) {
    CopyFrom(from);
    return *this;
  }
  inline store_offset_by_layer& operator=(store_offset_by_layer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const store_offset_by_layer& default_instance();

  static inline const store_offset_by_layer* internal_default_instance() {
    return reinterpret_cast<const store_offset_by_layer*>(
               &_store_offset_by_layer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(store_offset_by_layer& a, store_offset_by_layer& b) {
    a.Swap(&b);
  }
  inline void Swap(store_offset_by_layer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(store_offset_by_layer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline store_offset_by_layer* New() const final {
    return CreateMaybeMessage<store_offset_by_layer>(nullptr);
  }

  store_offset_by_layer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<store_offset_by_layer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const store_offset_by_layer& from);
  void MergeFrom(const store_offset_by_layer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(store_offset_by_layer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "agv_map.store_offset_by_layer";
  }
  protected:
  explicit store_offset_by_layer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_agv_5fmap_2eproto);
    return ::descriptor_table_agv_5fmap_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHighFieldNumber = 1,
    kHorizontalOffsetFieldNumber = 2,
    kVerticalOffsetFieldNumber = 3,
    kForkHighOffsetFieldNumber = 4,
  };
  // float high = 1;
  void clear_high();
  float high() const;
  void set_high(float value);
  private:
  float _internal_high() const;
  void _internal_set_high(float value);
  public:

  // float horizontal_offset = 2;
  void clear_horizontal_offset();
  float horizontal_offset() const;
  void set_horizontal_offset(float value);
  private:
  float _internal_horizontal_offset() const;
  void _internal_set_horizontal_offset(float value);
  public:

  // float vertical_offset = 3;
  void clear_vertical_offset();
  float vertical_offset() const;
  void set_vertical_offset(float value);
  private:
  float _internal_vertical_offset() const;
  void _internal_set_vertical_offset(float value);
  public:

  // float fork_high_offset = 4;
  void clear_fork_high_offset();
  float fork_high_offset() const;
  void set_fork_high_offset(float value);
  private:
  float _internal_fork_high_offset() const;
  void _internal_set_fork_high_offset(float value);
  public:

  // @@protoc_insertion_point(class_scope:agv_map.store_offset_by_layer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float high_;
  float horizontal_offset_;
  float vertical_offset_;
  float fork_high_offset_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_agv_5fmap_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MAP_ARR

// repeated .agv_map.Map map = 1;
inline int MAP_ARR::_internal_map_size() const {
  return map_.size();
}
inline int MAP_ARR::map_size() const {
  return _internal_map_size();
}
inline void MAP_ARR::clear_map() {
  map_.Clear();
}
inline ::agv_map::Map* MAP_ARR::mutable_map(int index) {
  // @@protoc_insertion_point(field_mutable:agv_map.MAP_ARR.map)
  return map_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Map >*
MAP_ARR::mutable_map() {
  // @@protoc_insertion_point(field_mutable_list:agv_map.MAP_ARR.map)
  return &map_;
}
inline const ::agv_map::Map& MAP_ARR::_internal_map(int index) const {
  return map_.Get(index);
}
inline const ::agv_map::Map& MAP_ARR::map(int index) const {
  // @@protoc_insertion_point(field_get:agv_map.MAP_ARR.map)
  return _internal_map(index);
}
inline ::agv_map::Map* MAP_ARR::_internal_add_map() {
  return map_.Add();
}
inline ::agv_map::Map* MAP_ARR::add_map() {
  // @@protoc_insertion_point(field_add:agv_map.MAP_ARR.map)
  return _internal_add_map();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Map >&
MAP_ARR::map() const {
  // @@protoc_insertion_point(field_list:agv_map.MAP_ARR.map)
  return map_;
}

// .agv_map.Describe describe = 2;
inline bool MAP_ARR::_internal_has_describe() const {
  return this != internal_default_instance() && describe_ != nullptr;
}
inline bool MAP_ARR::has_describe() const {
  return _internal_has_describe();
}
inline void MAP_ARR::clear_describe() {
  if (GetArena() == nullptr && describe_ != nullptr) {
    delete describe_;
  }
  describe_ = nullptr;
}
inline const ::agv_map::Describe& MAP_ARR::_internal_describe() const {
  const ::agv_map::Describe* p = describe_;
  return p != nullptr ? *p : reinterpret_cast<const ::agv_map::Describe&>(
      ::agv_map::_Describe_default_instance_);
}
inline const ::agv_map::Describe& MAP_ARR::describe() const {
  // @@protoc_insertion_point(field_get:agv_map.MAP_ARR.describe)
  return _internal_describe();
}
inline void MAP_ARR::unsafe_arena_set_allocated_describe(
    ::agv_map::Describe* describe) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(describe_);
  }
  describe_ = describe;
  if (describe) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agv_map.MAP_ARR.describe)
}
inline ::agv_map::Describe* MAP_ARR::release_describe() {
  
  ::agv_map::Describe* temp = describe_;
  describe_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::agv_map::Describe* MAP_ARR::unsafe_arena_release_describe() {
  // @@protoc_insertion_point(field_release:agv_map.MAP_ARR.describe)
  
  ::agv_map::Describe* temp = describe_;
  describe_ = nullptr;
  return temp;
}
inline ::agv_map::Describe* MAP_ARR::_internal_mutable_describe() {
  
  if (describe_ == nullptr) {
    auto* p = CreateMaybeMessage<::agv_map::Describe>(GetArena());
    describe_ = p;
  }
  return describe_;
}
inline ::agv_map::Describe* MAP_ARR::mutable_describe() {
  // @@protoc_insertion_point(field_mutable:agv_map.MAP_ARR.describe)
  return _internal_mutable_describe();
}
inline void MAP_ARR::set_allocated_describe(::agv_map::Describe* describe) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete describe_;
  }
  if (describe) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(describe);
    if (message_arena != submessage_arena) {
      describe = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, describe, submessage_arena);
    }
    
  } else {
    
  }
  describe_ = describe;
  // @@protoc_insertion_point(field_set_allocated:agv_map.MAP_ARR.describe)
}

// map<int32, .agv_map.Store_offset> store_off_config = 3;
inline int MAP_ARR::_internal_store_off_config_size() const {
  return store_off_config_.size();
}
inline int MAP_ARR::store_off_config_size() const {
  return _internal_store_off_config_size();
}
inline void MAP_ARR::clear_store_off_config() {
  store_off_config_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Store_offset >&
MAP_ARR::_internal_store_off_config() const {
  return store_off_config_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Store_offset >&
MAP_ARR::store_off_config() const {
  // @@protoc_insertion_point(field_map:agv_map.MAP_ARR.store_off_config)
  return _internal_store_off_config();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Store_offset >*
MAP_ARR::_internal_mutable_store_off_config() {
  return store_off_config_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Store_offset >*
MAP_ARR::mutable_store_off_config() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.MAP_ARR.store_off_config)
  return _internal_mutable_store_off_config();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Map

// .agv_map.Conf conf = 1;
inline bool Map::_internal_has_conf() const {
  return this != internal_default_instance() && conf_ != nullptr;
}
inline bool Map::has_conf() const {
  return _internal_has_conf();
}
inline void Map::clear_conf() {
  if (GetArena() == nullptr && conf_ != nullptr) {
    delete conf_;
  }
  conf_ = nullptr;
}
inline const ::agv_map::Conf& Map::_internal_conf() const {
  const ::agv_map::Conf* p = conf_;
  return p != nullptr ? *p : reinterpret_cast<const ::agv_map::Conf&>(
      ::agv_map::_Conf_default_instance_);
}
inline const ::agv_map::Conf& Map::conf() const {
  // @@protoc_insertion_point(field_get:agv_map.Map.conf)
  return _internal_conf();
}
inline void Map::unsafe_arena_set_allocated_conf(
    ::agv_map::Conf* conf) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(conf_);
  }
  conf_ = conf;
  if (conf) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agv_map.Map.conf)
}
inline ::agv_map::Conf* Map::release_conf() {
  
  ::agv_map::Conf* temp = conf_;
  conf_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::agv_map::Conf* Map::unsafe_arena_release_conf() {
  // @@protoc_insertion_point(field_release:agv_map.Map.conf)
  
  ::agv_map::Conf* temp = conf_;
  conf_ = nullptr;
  return temp;
}
inline ::agv_map::Conf* Map::_internal_mutable_conf() {
  
  if (conf_ == nullptr) {
    auto* p = CreateMaybeMessage<::agv_map::Conf>(GetArena());
    conf_ = p;
  }
  return conf_;
}
inline ::agv_map::Conf* Map::mutable_conf() {
  // @@protoc_insertion_point(field_mutable:agv_map.Map.conf)
  return _internal_mutable_conf();
}
inline void Map::set_allocated_conf(::agv_map::Conf* conf) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete conf_;
  }
  if (conf) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(conf);
    if (message_arena != submessage_arena) {
      conf = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, conf, submessage_arena);
    }
    
  } else {
    
  }
  conf_ = conf;
  // @@protoc_insertion_point(field_set_allocated:agv_map.Map.conf)
}

// map<int32, .agv_map.Point> point = 2;
inline int Map::_internal_point_size() const {
  return point_.size();
}
inline int Map::point_size() const {
  return _internal_point_size();
}
inline void Map::clear_point() {
  point_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >&
Map::_internal_point() const {
  return point_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >&
Map::point() const {
  // @@protoc_insertion_point(field_map:agv_map.Map.point)
  return _internal_point();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >*
Map::_internal_mutable_point() {
  return point_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >*
Map::mutable_point() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Map.point)
  return _internal_mutable_point();
}

// map<int32, .agv_map.Segment> segment = 3;
inline int Map::_internal_segment_size() const {
  return segment_.size();
}
inline int Map::segment_size() const {
  return _internal_segment_size();
}
inline void Map::clear_segment() {
  segment_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Segment >&
Map::_internal_segment() const {
  return segment_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Segment >&
Map::segment() const {
  // @@protoc_insertion_point(field_map:agv_map.Map.segment)
  return _internal_segment();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Segment >*
Map::_internal_mutable_segment() {
  return segment_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Segment >*
Map::mutable_segment() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Map.segment)
  return _internal_mutable_segment();
}

// map<int32, .agv_map.Fpoint> fpoint = 4;
inline int Map::_internal_fpoint_size() const {
  return fpoint_.size();
}
inline int Map::fpoint_size() const {
  return _internal_fpoint_size();
}
inline void Map::clear_fpoint() {
  fpoint_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Fpoint >&
Map::_internal_fpoint() const {
  return fpoint_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Fpoint >&
Map::fpoint() const {
  // @@protoc_insertion_point(field_map:agv_map.Map.fpoint)
  return _internal_fpoint();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Fpoint >*
Map::_internal_mutable_fpoint() {
  return fpoint_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Fpoint >*
Map::mutable_fpoint() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Map.fpoint)
  return _internal_mutable_fpoint();
}

// map<int32, .agv_map.Area> area = 5;
inline int Map::_internal_area_size() const {
  return area_.size();
}
inline int Map::area_size() const {
  return _internal_area_size();
}
inline void Map::clear_area() {
  area_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Area >&
Map::_internal_area() const {
  return area_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Area >&
Map::area() const {
  // @@protoc_insertion_point(field_map:agv_map.Map.area)
  return _internal_area();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Area >*
Map::_internal_mutable_area() {
  return area_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Area >*
Map::mutable_area() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Map.area)
  return _internal_mutable_area();
}

// map<int32, .agv_map.Point> point_stop_list = 6;
inline int Map::_internal_point_stop_list_size() const {
  return point_stop_list_.size();
}
inline int Map::point_stop_list_size() const {
  return _internal_point_stop_list_size();
}
inline void Map::clear_point_stop_list() {
  point_stop_list_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >&
Map::_internal_point_stop_list() const {
  return point_stop_list_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >&
Map::point_stop_list() const {
  // @@protoc_insertion_point(field_map:agv_map.Map.point_stop_list)
  return _internal_point_stop_list();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >*
Map::_internal_mutable_point_stop_list() {
  return point_stop_list_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >*
Map::mutable_point_stop_list() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Map.point_stop_list)
  return _internal_mutable_point_stop_list();
}

// map<int32, .agv_map.Point> point_charge_list = 7;
inline int Map::_internal_point_charge_list_size() const {
  return point_charge_list_.size();
}
inline int Map::point_charge_list_size() const {
  return _internal_point_charge_list_size();
}
inline void Map::clear_point_charge_list() {
  point_charge_list_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >&
Map::_internal_point_charge_list() const {
  return point_charge_list_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >&
Map::point_charge_list() const {
  // @@protoc_insertion_point(field_map:agv_map.Map.point_charge_list)
  return _internal_point_charge_list();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >*
Map::_internal_mutable_point_charge_list() {
  return point_charge_list_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point >*
Map::mutable_point_charge_list() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Map.point_charge_list)
  return _internal_mutable_point_charge_list();
}

// -------------------------------------------------------------------

// Conf

// int64 map_ts = 1;
inline void Conf::clear_map_ts() {
  map_ts_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Conf::_internal_map_ts() const {
  return map_ts_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Conf::map_ts() const {
  // @@protoc_insertion_point(field_get:agv_map.Conf.map_ts)
  return _internal_map_ts();
}
inline void Conf::_internal_set_map_ts(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  map_ts_ = value;
}
inline void Conf::set_map_ts(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_map_ts(value);
  // @@protoc_insertion_point(field_set:agv_map.Conf.map_ts)
}

// int32 map_pid = 2;
inline void Conf::clear_map_pid() {
  map_pid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Conf::_internal_map_pid() const {
  return map_pid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Conf::map_pid() const {
  // @@protoc_insertion_point(field_get:agv_map.Conf.map_pid)
  return _internal_map_pid();
}
inline void Conf::_internal_set_map_pid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  map_pid_ = value;
}
inline void Conf::set_map_pid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_map_pid(value);
  // @@protoc_insertion_point(field_set:agv_map.Conf.map_pid)
}

// int32 map_area = 3;
inline void Conf::clear_map_area() {
  map_area_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Conf::_internal_map_area() const {
  return map_area_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Conf::map_area() const {
  // @@protoc_insertion_point(field_get:agv_map.Conf.map_area)
  return _internal_map_area();
}
inline void Conf::_internal_set_map_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  map_area_ = value;
}
inline void Conf::set_map_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_map_area(value);
  // @@protoc_insertion_point(field_set:agv_map.Conf.map_area)
}

// string map_name = 4;
inline void Conf::clear_map_name() {
  map_name_.ClearToEmpty();
}
inline const std::string& Conf::map_name() const {
  // @@protoc_insertion_point(field_get:agv_map.Conf.map_name)
  return _internal_map_name();
}
inline void Conf::set_map_name(const std::string& value) {
  _internal_set_map_name(value);
  // @@protoc_insertion_point(field_set:agv_map.Conf.map_name)
}
inline std::string* Conf::mutable_map_name() {
  // @@protoc_insertion_point(field_mutable:agv_map.Conf.map_name)
  return _internal_mutable_map_name();
}
inline const std::string& Conf::_internal_map_name() const {
  return map_name_.Get();
}
inline void Conf::_internal_set_map_name(const std::string& value) {
  
  map_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Conf::set_map_name(std::string&& value) {
  
  map_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:agv_map.Conf.map_name)
}
inline void Conf::set_map_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  map_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:agv_map.Conf.map_name)
}
inline void Conf::set_map_name(const char* value,
    size_t size) {
  
  map_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:agv_map.Conf.map_name)
}
inline std::string* Conf::_internal_mutable_map_name() {
  
  return map_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Conf::release_map_name() {
  // @@protoc_insertion_point(field_release:agv_map.Conf.map_name)
  return map_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Conf::set_allocated_map_name(std::string* map_name) {
  if (map_name != nullptr) {
    
  } else {
    
  }
  map_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), map_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:agv_map.Conf.map_name)
}

// int32 max_pid = 5;
inline void Conf::clear_max_pid() {
  max_pid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Conf::_internal_max_pid() const {
  return max_pid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Conf::max_pid() const {
  // @@protoc_insertion_point(field_get:agv_map.Conf.max_pid)
  return _internal_max_pid();
}
inline void Conf::_internal_set_max_pid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  max_pid_ = value;
}
inline void Conf::set_max_pid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_max_pid(value);
  // @@protoc_insertion_point(field_set:agv_map.Conf.max_pid)
}

// int32 max_sid = 6;
inline void Conf::clear_max_sid() {
  max_sid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Conf::_internal_max_sid() const {
  return max_sid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Conf::max_sid() const {
  // @@protoc_insertion_point(field_get:agv_map.Conf.max_sid)
  return _internal_max_sid();
}
inline void Conf::_internal_set_max_sid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  max_sid_ = value;
}
inline void Conf::set_max_sid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_max_sid(value);
  // @@protoc_insertion_point(field_set:agv_map.Conf.max_sid)
}

// int32 max_aid = 7;
inline void Conf::clear_max_aid() {
  max_aid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Conf::_internal_max_aid() const {
  return max_aid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Conf::max_aid() const {
  // @@protoc_insertion_point(field_get:agv_map.Conf.max_aid)
  return _internal_max_aid();
}
inline void Conf::_internal_set_max_aid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  max_aid_ = value;
}
inline void Conf::set_max_aid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_max_aid(value);
  // @@protoc_insertion_point(field_set:agv_map.Conf.max_aid)
}

// int32 max_fid = 8;
inline void Conf::clear_max_fid() {
  max_fid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Conf::_internal_max_fid() const {
  return max_fid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Conf::max_fid() const {
  // @@protoc_insertion_point(field_get:agv_map.Conf.max_fid)
  return _internal_max_fid();
}
inline void Conf::_internal_set_max_fid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  max_fid_ = value;
}
inline void Conf::set_max_fid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_max_fid(value);
  // @@protoc_insertion_point(field_set:agv_map.Conf.max_fid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Point_Basic

// int32 id = 1;
inline void Point_Basic::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::id() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.id)
  return _internal_id();
}
inline void Point_Basic::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void Point_Basic::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.id)
}

// string name = 2;
inline void Point_Basic::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& Point_Basic::name() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.name)
  return _internal_name();
}
inline void Point_Basic::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.name)
}
inline std::string* Point_Basic::mutable_name() {
  // @@protoc_insertion_point(field_mutable:agv_map.Point.Basic.name)
  return _internal_mutable_name();
}
inline const std::string& Point_Basic::_internal_name() const {
  return name_.Get();
}
inline void Point_Basic::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Point_Basic::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:agv_map.Point.Basic.name)
}
inline void Point_Basic::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:agv_map.Point.Basic.name)
}
inline void Point_Basic::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:agv_map.Point.Basic.name)
}
inline std::string* Point_Basic::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Point_Basic::release_name() {
  // @@protoc_insertion_point(field_release:agv_map.Point.Basic.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Point_Basic::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:agv_map.Point.Basic.name)
}

// int32 type = 3;
inline void Point_Basic::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::type() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.type)
  return _internal_type();
}
inline void Point_Basic::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void Point_Basic::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.type)
}

// sint32 x = 4;
inline void Point_Basic::clear_x() {
  x_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_x() const {
  return x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::x() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.x)
  return _internal_x();
}
inline void Point_Basic::_internal_set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  x_ = value;
}
inline void Point_Basic::set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.x)
}

// sint32 y = 5;
inline void Point_Basic::clear_y() {
  y_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_y() const {
  return y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::y() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.y)
  return _internal_y();
}
inline void Point_Basic::_internal_set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  y_ = value;
}
inline void Point_Basic::set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.y)
}

// int32 get_height = 6;
inline void Point_Basic::clear_get_height() {
  get_height_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_get_height() const {
  return get_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::get_height() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.get_height)
  return _internal_get_height();
}
inline void Point_Basic::_internal_set_get_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  get_height_ = value;
}
inline void Point_Basic::set_get_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_get_height(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.get_height)
}

// int32 put_height = 7;
inline void Point_Basic::clear_put_height() {
  put_height_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_put_height() const {
  return put_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::put_height() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.put_height)
  return _internal_put_height();
}
inline void Point_Basic::_internal_set_put_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  put_height_ = value;
}
inline void Point_Basic::set_put_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_put_height(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.put_height)
}

// int32 run_height = 8;
inline void Point_Basic::clear_run_height() {
  run_height_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_run_height() const {
  return run_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::run_height() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.run_height)
  return _internal_run_height();
}
inline void Point_Basic::_internal_set_run_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  run_height_ = value;
}
inline void Point_Basic::set_run_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_run_height(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.run_height)
}

// sint32 area_id = 9;
inline void Point_Basic::clear_area_id() {
  area_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_area_id() const {
  return area_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::area_id() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.area_id)
  return _internal_area_id();
}
inline void Point_Basic::_internal_set_area_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  area_id_ = value;
}
inline void Point_Basic::set_area_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_area_id(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.area_id)
}

// string area_name = 10;
inline void Point_Basic::clear_area_name() {
  area_name_.ClearToEmpty();
}
inline const std::string& Point_Basic::area_name() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.area_name)
  return _internal_area_name();
}
inline void Point_Basic::set_area_name(const std::string& value) {
  _internal_set_area_name(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.area_name)
}
inline std::string* Point_Basic::mutable_area_name() {
  // @@protoc_insertion_point(field_mutable:agv_map.Point.Basic.area_name)
  return _internal_mutable_area_name();
}
inline const std::string& Point_Basic::_internal_area_name() const {
  return area_name_.Get();
}
inline void Point_Basic::_internal_set_area_name(const std::string& value) {
  
  area_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Point_Basic::set_area_name(std::string&& value) {
  
  area_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:agv_map.Point.Basic.area_name)
}
inline void Point_Basic::set_area_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  area_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:agv_map.Point.Basic.area_name)
}
inline void Point_Basic::set_area_name(const char* value,
    size_t size) {
  
  area_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:agv_map.Point.Basic.area_name)
}
inline std::string* Point_Basic::_internal_mutable_area_name() {
  
  return area_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Point_Basic::release_area_name() {
  // @@protoc_insertion_point(field_release:agv_map.Point.Basic.area_name)
  return area_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Point_Basic::set_allocated_area_name(std::string* area_name) {
  if (area_name != nullptr) {
    
  } else {
    
  }
  area_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), area_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:agv_map.Point.Basic.area_name)
}

// sint32 QRcode = 11;
inline void Point_Basic::clear_qrcode() {
  qrcode_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_qrcode() const {
  return qrcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::qrcode() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.QRcode)
  return _internal_qrcode();
}
inline void Point_Basic::_internal_set_qrcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  qrcode_ = value;
}
inline void Point_Basic::set_qrcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_qrcode(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.QRcode)
}

// int32 stype = 12;
inline void Point_Basic::clear_stype() {
  stype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_stype() const {
  return stype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::stype() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.stype)
  return _internal_stype();
}
inline void Point_Basic::_internal_set_stype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  stype_ = value;
}
inline void Point_Basic::set_stype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_stype(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.stype)
}

// int32 atype = 13;
inline void Point_Basic::clear_atype() {
  atype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_atype() const {
  return atype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::atype() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.atype)
  return _internal_atype();
}
inline void Point_Basic::_internal_set_atype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  atype_ = value;
}
inline void Point_Basic::set_atype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_atype(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.atype)
}

// int32 disable = 14;
inline void Point_Basic::clear_disable() {
  disable_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_disable() const {
  return disable_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::disable() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.disable)
  return _internal_disable();
}
inline void Point_Basic::_internal_set_disable(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  disable_ = value;
}
inline void Point_Basic::set_disable(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_disable(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.disable)
}

// int32 lock = 15;
inline void Point_Basic::clear_lock() {
  lock_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_lock() const {
  return lock_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::lock() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.lock)
  return _internal_lock();
}
inline void Point_Basic::_internal_set_lock(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  lock_ = value;
}
inline void Point_Basic::set_lock(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_lock(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.lock)
}

// sint32 floor = 16;
inline void Point_Basic::clear_floor() {
  floor_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_floor() const {
  return floor_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::floor() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.floor)
  return _internal_floor();
}
inline void Point_Basic::_internal_set_floor(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  floor_ = value;
}
inline void Point_Basic::set_floor(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_floor(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.floor)
}

// sint32 agv_dir = 17;
inline void Point_Basic::clear_agv_dir() {
  agv_dir_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_agv_dir() const {
  return agv_dir_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::agv_dir() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.agv_dir)
  return _internal_agv_dir();
}
inline void Point_Basic::_internal_set_agv_dir(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  agv_dir_ = value;
}
inline void Point_Basic::set_agv_dir(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_agv_dir(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.agv_dir)
}

// int32 connect_arc = 18;
inline void Point_Basic::clear_connect_arc() {
  connect_arc_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::_internal_connect_arc() const {
  return connect_arc_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Basic::connect_arc() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Basic.connect_arc)
  return _internal_connect_arc();
}
inline void Point_Basic::_internal_set_connect_arc(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  connect_arc_ = value;
}
inline void Point_Basic::set_connect_arc(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_connect_arc(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Basic.connect_arc)
}

// -------------------------------------------------------------------

// Point_Sparam

// int32 layers = 1;
inline void Point_Sparam::clear_layers() {
  layers_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Sparam::_internal_layers() const {
  return layers_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Sparam::layers() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Sparam.layers)
  return _internal_layers();
}
inline void Point_Sparam::_internal_set_layers(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  layers_ = value;
}
inline void Point_Sparam::set_layers(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_layers(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Sparam.layers)
}

// sint32 horizon_offset = 2;
inline void Point_Sparam::clear_horizon_offset() {
  horizon_offset_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Sparam::_internal_horizon_offset() const {
  return horizon_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Sparam::horizon_offset() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Sparam.horizon_offset)
  return _internal_horizon_offset();
}
inline void Point_Sparam::_internal_set_horizon_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  horizon_offset_ = value;
}
inline void Point_Sparam::set_horizon_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_horizon_offset(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Sparam.horizon_offset)
}

// sint32 vertical_offset = 3;
inline void Point_Sparam::clear_vertical_offset() {
  vertical_offset_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Sparam::_internal_vertical_offset() const {
  return vertical_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Sparam::vertical_offset() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Sparam.vertical_offset)
  return _internal_vertical_offset();
}
inline void Point_Sparam::_internal_set_vertical_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vertical_offset_ = value;
}
inline void Point_Sparam::set_vertical_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vertical_offset(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Sparam.vertical_offset)
}

// int32 get_height = 4;
inline void Point_Sparam::clear_get_height() {
  get_height_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Sparam::_internal_get_height() const {
  return get_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Sparam::get_height() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Sparam.get_height)
  return _internal_get_height();
}
inline void Point_Sparam::_internal_set_get_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  get_height_ = value;
}
inline void Point_Sparam::set_get_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_get_height(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Sparam.get_height)
}

// int32 put_height = 5;
inline void Point_Sparam::clear_put_height() {
  put_height_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Sparam::_internal_put_height() const {
  return put_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Sparam::put_height() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Sparam.put_height)
  return _internal_put_height();
}
inline void Point_Sparam::_internal_set_put_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  put_height_ = value;
}
inline void Point_Sparam::set_put_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_put_height(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Sparam.put_height)
}

// int32 run_height = 6;
inline void Point_Sparam::clear_run_height() {
  run_height_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Sparam::_internal_run_height() const {
  return run_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Sparam::run_height() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Sparam.run_height)
  return _internal_run_height();
}
inline void Point_Sparam::_internal_set_run_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  run_height_ = value;
}
inline void Point_Sparam::set_run_height(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_run_height(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Sparam.run_height)
}

// -------------------------------------------------------------------

// Point_Tparam

// int32 enable = 1;
inline void Point_Tparam::clear_enable() {
  enable_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Tparam::_internal_enable() const {
  return enable_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Tparam::enable() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Tparam.enable)
  return _internal_enable();
}
inline void Point_Tparam::_internal_set_enable(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  enable_ = value;
}
inline void Point_Tparam::set_enable(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_enable(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Tparam.enable)
}

// int32 type = 2;
inline void Point_Tparam::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Tparam::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Tparam::type() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Tparam.type)
  return _internal_type();
}
inline void Point_Tparam::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void Point_Tparam::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Tparam.type)
}

// int32 interval = 3;
inline void Point_Tparam::clear_interval() {
  interval_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Tparam::_internal_interval() const {
  return interval_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Tparam::interval() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Tparam.interval)
  return _internal_interval();
}
inline void Point_Tparam::_internal_set_interval(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  interval_ = value;
}
inline void Point_Tparam::set_interval(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_interval(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Tparam.interval)
}

// sint32 offset = 4;
inline void Point_Tparam::clear_offset() {
  offset_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Tparam::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Tparam::offset() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Tparam.offset)
  return _internal_offset();
}
inline void Point_Tparam::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  offset_ = value;
}
inline void Point_Tparam::set_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Tparam.offset)
}

// sint32 target_area = 5;
inline void Point_Tparam::clear_target_area() {
  target_area_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Tparam::_internal_target_area() const {
  return target_area_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Tparam::target_area() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Tparam.target_area)
  return _internal_target_area();
}
inline void Point_Tparam::_internal_set_target_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  target_area_ = value;
}
inline void Point_Tparam::set_target_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target_area(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Tparam.target_area)
}

// sint32 target_sta = 6;
inline void Point_Tparam::clear_target_sta() {
  target_sta_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Tparam::_internal_target_sta() const {
  return target_sta_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point_Tparam::target_sta() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.Tparam.target_sta)
  return _internal_target_sta();
}
inline void Point_Tparam::_internal_set_target_sta(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  target_sta_ = value;
}
inline void Point_Tparam::set_target_sta(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target_sta(value);
  // @@protoc_insertion_point(field_set:agv_map.Point.Tparam.target_sta)
}

// -------------------------------------------------------------------

// Point

// .agv_map.Point.Basic basic = 1;
inline bool Point::_internal_has_basic() const {
  return this != internal_default_instance() && basic_ != nullptr;
}
inline bool Point::has_basic() const {
  return _internal_has_basic();
}
inline void Point::clear_basic() {
  if (GetArena() == nullptr && basic_ != nullptr) {
    delete basic_;
  }
  basic_ = nullptr;
}
inline const ::agv_map::Point_Basic& Point::_internal_basic() const {
  const ::agv_map::Point_Basic* p = basic_;
  return p != nullptr ? *p : reinterpret_cast<const ::agv_map::Point_Basic&>(
      ::agv_map::_Point_Basic_default_instance_);
}
inline const ::agv_map::Point_Basic& Point::basic() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.basic)
  return _internal_basic();
}
inline void Point::unsafe_arena_set_allocated_basic(
    ::agv_map::Point_Basic* basic) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(basic_);
  }
  basic_ = basic;
  if (basic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agv_map.Point.basic)
}
inline ::agv_map::Point_Basic* Point::release_basic() {
  
  ::agv_map::Point_Basic* temp = basic_;
  basic_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::agv_map::Point_Basic* Point::unsafe_arena_release_basic() {
  // @@protoc_insertion_point(field_release:agv_map.Point.basic)
  
  ::agv_map::Point_Basic* temp = basic_;
  basic_ = nullptr;
  return temp;
}
inline ::agv_map::Point_Basic* Point::_internal_mutable_basic() {
  
  if (basic_ == nullptr) {
    auto* p = CreateMaybeMessage<::agv_map::Point_Basic>(GetArena());
    basic_ = p;
  }
  return basic_;
}
inline ::agv_map::Point_Basic* Point::mutable_basic() {
  // @@protoc_insertion_point(field_mutable:agv_map.Point.basic)
  return _internal_mutable_basic();
}
inline void Point::set_allocated_basic(::agv_map::Point_Basic* basic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete basic_;
  }
  if (basic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(basic);
    if (message_arena != submessage_arena) {
      basic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, basic, submessage_arena);
    }
    
  } else {
    
  }
  basic_ = basic;
  // @@protoc_insertion_point(field_set_allocated:agv_map.Point.basic)
}

// map<int32, sint32> agv_param = 2;
inline int Point::_internal_agv_param_size() const {
  return agv_param_.size();
}
inline int Point::agv_param_size() const {
  return _internal_agv_param_size();
}
inline void Point::clear_agv_param() {
  agv_param_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Point::_internal_agv_param() const {
  return agv_param_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Point::agv_param() const {
  // @@protoc_insertion_point(field_map:agv_map.Point.agv_param)
  return _internal_agv_param();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Point::_internal_mutable_agv_param() {
  return agv_param_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Point::mutable_agv_param() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Point.agv_param)
  return _internal_mutable_agv_param();
}

// map<int32, sint32> ctl_param = 3;
inline int Point::_internal_ctl_param_size() const {
  return ctl_param_.size();
}
inline int Point::ctl_param_size() const {
  return _internal_ctl_param_size();
}
inline void Point::clear_ctl_param() {
  ctl_param_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Point::_internal_ctl_param() const {
  return ctl_param_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Point::ctl_param() const {
  // @@protoc_insertion_point(field_map:agv_map.Point.ctl_param)
  return _internal_ctl_param();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Point::_internal_mutable_ctl_param() {
  return ctl_param_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Point::mutable_ctl_param() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Point.ctl_param)
  return _internal_mutable_ctl_param();
}

// map<int32, sint32> avo_param = 4;
inline int Point::_internal_avo_param_size() const {
  return avo_param_.size();
}
inline int Point::avo_param_size() const {
  return _internal_avo_param_size();
}
inline void Point::clear_avo_param() {
  avo_param_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Point::_internal_avo_param() const {
  return avo_param_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Point::avo_param() const {
  // @@protoc_insertion_point(field_map:agv_map.Point.avo_param)
  return _internal_avo_param();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Point::_internal_mutable_avo_param() {
  return avo_param_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Point::mutable_avo_param() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Point.avo_param)
  return _internal_mutable_avo_param();
}

// map<int32, .agv_map.Point.Sparam> sta_param = 6;
inline int Point::_internal_sta_param_size() const {
  return sta_param_.size();
}
inline int Point::sta_param_size() const {
  return _internal_sta_param_size();
}
inline void Point::clear_sta_param() {
  sta_param_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point_Sparam >&
Point::_internal_sta_param() const {
  return sta_param_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point_Sparam >&
Point::sta_param() const {
  // @@protoc_insertion_point(field_map:agv_map.Point.sta_param)
  return _internal_sta_param();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point_Sparam >*
Point::_internal_mutable_sta_param() {
  return sta_param_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::Point_Sparam >*
Point::mutable_sta_param() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Point.sta_param)
  return _internal_mutable_sta_param();
}

// repeated int32 seg_id = 5;
inline int Point::_internal_seg_id_size() const {
  return seg_id_.size();
}
inline int Point::seg_id_size() const {
  return _internal_seg_id_size();
}
inline void Point::clear_seg_id() {
  seg_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point::_internal_seg_id(int index) const {
  return seg_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point::seg_id(int index) const {
  // @@protoc_insertion_point(field_get:agv_map.Point.seg_id)
  return _internal_seg_id(index);
}
inline void Point::set_seg_id(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  seg_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:agv_map.Point.seg_id)
}
inline void Point::_internal_add_seg_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  seg_id_.Add(value);
}
inline void Point::add_seg_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_seg_id(value);
  // @@protoc_insertion_point(field_add:agv_map.Point.seg_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Point::_internal_seg_id() const {
  return seg_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Point::seg_id() const {
  // @@protoc_insertion_point(field_list:agv_map.Point.seg_id)
  return _internal_seg_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Point::_internal_mutable_seg_id() {
  return &seg_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Point::mutable_seg_id() {
  // @@protoc_insertion_point(field_mutable_list:agv_map.Point.seg_id)
  return _internal_mutable_seg_id();
}

// repeated int32 in_area = 8;
inline int Point::_internal_in_area_size() const {
  return in_area_.size();
}
inline int Point::in_area_size() const {
  return _internal_in_area_size();
}
inline void Point::clear_in_area() {
  in_area_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point::_internal_in_area(int index) const {
  return in_area_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point::in_area(int index) const {
  // @@protoc_insertion_point(field_get:agv_map.Point.in_area)
  return _internal_in_area(index);
}
inline void Point::set_in_area(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  in_area_.Set(index, value);
  // @@protoc_insertion_point(field_set:agv_map.Point.in_area)
}
inline void Point::_internal_add_in_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  in_area_.Add(value);
}
inline void Point::add_in_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_in_area(value);
  // @@protoc_insertion_point(field_add:agv_map.Point.in_area)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Point::_internal_in_area() const {
  return in_area_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Point::in_area() const {
  // @@protoc_insertion_point(field_list:agv_map.Point.in_area)
  return _internal_in_area();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Point::_internal_mutable_in_area() {
  return &in_area_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Point::mutable_in_area() {
  // @@protoc_insertion_point(field_mutable_list:agv_map.Point.in_area)
  return _internal_mutable_in_area();
}

// .agv_map.Point.Tparam test_param = 7;
inline bool Point::_internal_has_test_param() const {
  return this != internal_default_instance() && test_param_ != nullptr;
}
inline bool Point::has_test_param() const {
  return _internal_has_test_param();
}
inline void Point::clear_test_param() {
  if (GetArena() == nullptr && test_param_ != nullptr) {
    delete test_param_;
  }
  test_param_ = nullptr;
}
inline const ::agv_map::Point_Tparam& Point::_internal_test_param() const {
  const ::agv_map::Point_Tparam* p = test_param_;
  return p != nullptr ? *p : reinterpret_cast<const ::agv_map::Point_Tparam&>(
      ::agv_map::_Point_Tparam_default_instance_);
}
inline const ::agv_map::Point_Tparam& Point::test_param() const {
  // @@protoc_insertion_point(field_get:agv_map.Point.test_param)
  return _internal_test_param();
}
inline void Point::unsafe_arena_set_allocated_test_param(
    ::agv_map::Point_Tparam* test_param) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(test_param_);
  }
  test_param_ = test_param;
  if (test_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agv_map.Point.test_param)
}
inline ::agv_map::Point_Tparam* Point::release_test_param() {
  
  ::agv_map::Point_Tparam* temp = test_param_;
  test_param_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::agv_map::Point_Tparam* Point::unsafe_arena_release_test_param() {
  // @@protoc_insertion_point(field_release:agv_map.Point.test_param)
  
  ::agv_map::Point_Tparam* temp = test_param_;
  test_param_ = nullptr;
  return temp;
}
inline ::agv_map::Point_Tparam* Point::_internal_mutable_test_param() {
  
  if (test_param_ == nullptr) {
    auto* p = CreateMaybeMessage<::agv_map::Point_Tparam>(GetArena());
    test_param_ = p;
  }
  return test_param_;
}
inline ::agv_map::Point_Tparam* Point::mutable_test_param() {
  // @@protoc_insertion_point(field_mutable:agv_map.Point.test_param)
  return _internal_mutable_test_param();
}
inline void Point::set_allocated_test_param(::agv_map::Point_Tparam* test_param) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete test_param_;
  }
  if (test_param) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(test_param);
    if (message_arena != submessage_arena) {
      test_param = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, test_param, submessage_arena);
    }
    
  } else {
    
  }
  test_param_ = test_param;
  // @@protoc_insertion_point(field_set_allocated:agv_map.Point.test_param)
}

// repeated int32 get_add_seg = 9;
inline int Point::_internal_get_add_seg_size() const {
  return get_add_seg_.size();
}
inline int Point::get_add_seg_size() const {
  return _internal_get_add_seg_size();
}
inline void Point::clear_get_add_seg() {
  get_add_seg_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point::_internal_get_add_seg(int index) const {
  return get_add_seg_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point::get_add_seg(int index) const {
  // @@protoc_insertion_point(field_get:agv_map.Point.get_add_seg)
  return _internal_get_add_seg(index);
}
inline void Point::set_get_add_seg(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  get_add_seg_.Set(index, value);
  // @@protoc_insertion_point(field_set:agv_map.Point.get_add_seg)
}
inline void Point::_internal_add_get_add_seg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  get_add_seg_.Add(value);
}
inline void Point::add_get_add_seg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_get_add_seg(value);
  // @@protoc_insertion_point(field_add:agv_map.Point.get_add_seg)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Point::_internal_get_add_seg() const {
  return get_add_seg_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Point::get_add_seg() const {
  // @@protoc_insertion_point(field_list:agv_map.Point.get_add_seg)
  return _internal_get_add_seg();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Point::_internal_mutable_get_add_seg() {
  return &get_add_seg_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Point::mutable_get_add_seg() {
  // @@protoc_insertion_point(field_mutable_list:agv_map.Point.get_add_seg)
  return _internal_mutable_get_add_seg();
}

// repeated int32 put_add_seg = 10;
inline int Point::_internal_put_add_seg_size() const {
  return put_add_seg_.size();
}
inline int Point::put_add_seg_size() const {
  return _internal_put_add_seg_size();
}
inline void Point::clear_put_add_seg() {
  put_add_seg_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point::_internal_put_add_seg(int index) const {
  return put_add_seg_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point::put_add_seg(int index) const {
  // @@protoc_insertion_point(field_get:agv_map.Point.put_add_seg)
  return _internal_put_add_seg(index);
}
inline void Point::set_put_add_seg(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  put_add_seg_.Set(index, value);
  // @@protoc_insertion_point(field_set:agv_map.Point.put_add_seg)
}
inline void Point::_internal_add_put_add_seg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  put_add_seg_.Add(value);
}
inline void Point::add_put_add_seg(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_put_add_seg(value);
  // @@protoc_insertion_point(field_add:agv_map.Point.put_add_seg)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Point::_internal_put_add_seg() const {
  return put_add_seg_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Point::put_add_seg() const {
  // @@protoc_insertion_point(field_list:agv_map.Point.put_add_seg)
  return _internal_put_add_seg();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Point::_internal_mutable_put_add_seg() {
  return &put_add_seg_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Point::mutable_put_add_seg() {
  // @@protoc_insertion_point(field_mutable_list:agv_map.Point.put_add_seg)
  return _internal_mutable_put_add_seg();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Segment_Basic

// int32 id = 1;
inline void Segment_Basic::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::id() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.id)
  return _internal_id();
}
inline void Segment_Basic::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void Segment_Basic::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.id)
}

// int32 start_id = 2;
inline void Segment_Basic::clear_start_id() {
  start_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_start_id() const {
  return start_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::start_id() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.start_id)
  return _internal_start_id();
}
inline void Segment_Basic::_internal_set_start_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  start_id_ = value;
}
inline void Segment_Basic::set_start_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_start_id(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.start_id)
}

// sint32 start_x = 3;
inline void Segment_Basic::clear_start_x() {
  start_x_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_start_x() const {
  return start_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::start_x() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.start_x)
  return _internal_start_x();
}
inline void Segment_Basic::_internal_set_start_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  start_x_ = value;
}
inline void Segment_Basic::set_start_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_start_x(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.start_x)
}

// sint32 start_y = 4;
inline void Segment_Basic::clear_start_y() {
  start_y_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_start_y() const {
  return start_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::start_y() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.start_y)
  return _internal_start_y();
}
inline void Segment_Basic::_internal_set_start_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  start_y_ = value;
}
inline void Segment_Basic::set_start_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_start_y(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.start_y)
}

// int32 end_id = 5;
inline void Segment_Basic::clear_end_id() {
  end_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_end_id() const {
  return end_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::end_id() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.end_id)
  return _internal_end_id();
}
inline void Segment_Basic::_internal_set_end_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  end_id_ = value;
}
inline void Segment_Basic::set_end_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_end_id(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.end_id)
}

// sint32 end_x = 6;
inline void Segment_Basic::clear_end_x() {
  end_x_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_end_x() const {
  return end_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::end_x() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.end_x)
  return _internal_end_x();
}
inline void Segment_Basic::_internal_set_end_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  end_x_ = value;
}
inline void Segment_Basic::set_end_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_end_x(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.end_x)
}

// sint32 end_y = 7;
inline void Segment_Basic::clear_end_y() {
  end_y_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_end_y() const {
  return end_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::end_y() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.end_y)
  return _internal_end_y();
}
inline void Segment_Basic::_internal_set_end_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  end_y_ = value;
}
inline void Segment_Basic::set_end_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_end_y(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.end_y)
}

// sint32 cen_x = 8;
inline void Segment_Basic::clear_cen_x() {
  cen_x_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_cen_x() const {
  return cen_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::cen_x() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.cen_x)
  return _internal_cen_x();
}
inline void Segment_Basic::_internal_set_cen_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cen_x_ = value;
}
inline void Segment_Basic::set_cen_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cen_x(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.cen_x)
}

// sint32 cen_y = 9;
inline void Segment_Basic::clear_cen_y() {
  cen_y_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_cen_y() const {
  return cen_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::cen_y() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.cen_y)
  return _internal_cen_y();
}
inline void Segment_Basic::_internal_set_cen_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cen_y_ = value;
}
inline void Segment_Basic::set_cen_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cen_y(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.cen_y)
}

// int32 radius = 10;
inline void Segment_Basic::clear_radius() {
  radius_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_radius() const {
  return radius_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::radius() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.radius)
  return _internal_radius();
}
inline void Segment_Basic::_internal_set_radius(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  radius_ = value;
}
inline void Segment_Basic::set_radius(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_radius(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.radius)
}

// int32 seglen = 11;
inline void Segment_Basic::clear_seglen() {
  seglen_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_seglen() const {
  return seglen_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::seglen() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.seglen)
  return _internal_seglen();
}
inline void Segment_Basic::_internal_set_seglen(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  seglen_ = value;
}
inline void Segment_Basic::set_seglen(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_seglen(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.seglen)
}

// int32 type = 12;
inline void Segment_Basic::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::type() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.type)
  return _internal_type();
}
inline void Segment_Basic::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void Segment_Basic::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.type)
}

// sint32 dir_mode = 13;
inline void Segment_Basic::clear_dir_mode() {
  dir_mode_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_dir_mode() const {
  return dir_mode_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::dir_mode() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.dir_mode)
  return _internal_dir_mode();
}
inline void Segment_Basic::_internal_set_dir_mode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  dir_mode_ = value;
}
inline void Segment_Basic::set_dir_mode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dir_mode(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.dir_mode)
}

// float start_angle = 14;
inline void Segment_Basic::clear_start_angle() {
  start_angle_ = 0;
}
inline float Segment_Basic::_internal_start_angle() const {
  return start_angle_;
}
inline float Segment_Basic::start_angle() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.start_angle)
  return _internal_start_angle();
}
inline void Segment_Basic::_internal_set_start_angle(float value) {
  
  start_angle_ = value;
}
inline void Segment_Basic::set_start_angle(float value) {
  _internal_set_start_angle(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.start_angle)
}

// float end_angle = 15;
inline void Segment_Basic::clear_end_angle() {
  end_angle_ = 0;
}
inline float Segment_Basic::_internal_end_angle() const {
  return end_angle_;
}
inline float Segment_Basic::end_angle() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.end_angle)
  return _internal_end_angle();
}
inline void Segment_Basic::_internal_set_end_angle(float value) {
  
  end_angle_ = value;
}
inline void Segment_Basic::set_end_angle(float value) {
  _internal_set_end_angle(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.end_angle)
}

// int64 agv_type = 16;
inline void Segment_Basic::clear_agv_type() {
  agv_type_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Segment_Basic::_internal_agv_type() const {
  return agv_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Segment_Basic::agv_type() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.agv_type)
  return _internal_agv_type();
}
inline void Segment_Basic::_internal_set_agv_type(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  agv_type_ = value;
}
inline void Segment_Basic::set_agv_type(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_agv_type(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.agv_type)
}

// int32 disable = 17;
inline void Segment_Basic::clear_disable() {
  disable_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_disable() const {
  return disable_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::disable() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.disable)
  return _internal_disable();
}
inline void Segment_Basic::_internal_set_disable(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  disable_ = value;
}
inline void Segment_Basic::set_disable(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_disable(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.disable)
}

// int32 lock = 18;
inline void Segment_Basic::clear_lock() {
  lock_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_lock() const {
  return lock_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::lock() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.lock)
  return _internal_lock();
}
inline void Segment_Basic::_internal_set_lock(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  lock_ = value;
}
inline void Segment_Basic::set_lock(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_lock(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.lock)
}

// sint32 floor = 19;
inline void Segment_Basic::clear_floor() {
  floor_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::_internal_floor() const {
  return floor_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Segment_Basic::floor() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.Basic.floor)
  return _internal_floor();
}
inline void Segment_Basic::_internal_set_floor(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  floor_ = value;
}
inline void Segment_Basic::set_floor(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_floor(value);
  // @@protoc_insertion_point(field_set:agv_map.Segment.Basic.floor)
}

// -------------------------------------------------------------------

// Segment

// .agv_map.Segment.Basic basic = 1;
inline bool Segment::_internal_has_basic() const {
  return this != internal_default_instance() && basic_ != nullptr;
}
inline bool Segment::has_basic() const {
  return _internal_has_basic();
}
inline void Segment::clear_basic() {
  if (GetArena() == nullptr && basic_ != nullptr) {
    delete basic_;
  }
  basic_ = nullptr;
}
inline const ::agv_map::Segment_Basic& Segment::_internal_basic() const {
  const ::agv_map::Segment_Basic* p = basic_;
  return p != nullptr ? *p : reinterpret_cast<const ::agv_map::Segment_Basic&>(
      ::agv_map::_Segment_Basic_default_instance_);
}
inline const ::agv_map::Segment_Basic& Segment::basic() const {
  // @@protoc_insertion_point(field_get:agv_map.Segment.basic)
  return _internal_basic();
}
inline void Segment::unsafe_arena_set_allocated_basic(
    ::agv_map::Segment_Basic* basic) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(basic_);
  }
  basic_ = basic;
  if (basic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agv_map.Segment.basic)
}
inline ::agv_map::Segment_Basic* Segment::release_basic() {
  
  ::agv_map::Segment_Basic* temp = basic_;
  basic_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::agv_map::Segment_Basic* Segment::unsafe_arena_release_basic() {
  // @@protoc_insertion_point(field_release:agv_map.Segment.basic)
  
  ::agv_map::Segment_Basic* temp = basic_;
  basic_ = nullptr;
  return temp;
}
inline ::agv_map::Segment_Basic* Segment::_internal_mutable_basic() {
  
  if (basic_ == nullptr) {
    auto* p = CreateMaybeMessage<::agv_map::Segment_Basic>(GetArena());
    basic_ = p;
  }
  return basic_;
}
inline ::agv_map::Segment_Basic* Segment::mutable_basic() {
  // @@protoc_insertion_point(field_mutable:agv_map.Segment.basic)
  return _internal_mutable_basic();
}
inline void Segment::set_allocated_basic(::agv_map::Segment_Basic* basic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete basic_;
  }
  if (basic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(basic);
    if (message_arena != submessage_arena) {
      basic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, basic, submessage_arena);
    }
    
  } else {
    
  }
  basic_ = basic;
  // @@protoc_insertion_point(field_set_allocated:agv_map.Segment.basic)
}

// map<int32, sint32> agv_param = 2;
inline int Segment::_internal_agv_param_size() const {
  return agv_param_.size();
}
inline int Segment::agv_param_size() const {
  return _internal_agv_param_size();
}
inline void Segment::clear_agv_param() {
  agv_param_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Segment::_internal_agv_param() const {
  return agv_param_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Segment::agv_param() const {
  // @@protoc_insertion_point(field_map:agv_map.Segment.agv_param)
  return _internal_agv_param();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Segment::_internal_mutable_agv_param() {
  return agv_param_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Segment::mutable_agv_param() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Segment.agv_param)
  return _internal_mutable_agv_param();
}

// map<int32, sint32> ctl_param = 3;
inline int Segment::_internal_ctl_param_size() const {
  return ctl_param_.size();
}
inline int Segment::ctl_param_size() const {
  return _internal_ctl_param_size();
}
inline void Segment::clear_ctl_param() {
  ctl_param_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Segment::_internal_ctl_param() const {
  return ctl_param_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Segment::ctl_param() const {
  // @@protoc_insertion_point(field_map:agv_map.Segment.ctl_param)
  return _internal_ctl_param();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Segment::_internal_mutable_ctl_param() {
  return ctl_param_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Segment::mutable_ctl_param() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Segment.ctl_param)
  return _internal_mutable_ctl_param();
}

// map<int32, sint32> avo_param = 4;
inline int Segment::_internal_avo_param_size() const {
  return avo_param_.size();
}
inline int Segment::avo_param_size() const {
  return _internal_avo_param_size();
}
inline void Segment::clear_avo_param() {
  avo_param_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Segment::_internal_avo_param() const {
  return avo_param_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Segment::avo_param() const {
  // @@protoc_insertion_point(field_map:agv_map.Segment.avo_param)
  return _internal_avo_param();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Segment::_internal_mutable_avo_param() {
  return avo_param_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Segment::mutable_avo_param() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Segment.avo_param)
  return _internal_mutable_avo_param();
}

// -------------------------------------------------------------------

// Fpoint_Basic

// int32 id = 1;
inline void Fpoint_Basic::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Fpoint_Basic::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Fpoint_Basic::id() const {
  // @@protoc_insertion_point(field_get:agv_map.Fpoint.Basic.id)
  return _internal_id();
}
inline void Fpoint_Basic::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void Fpoint_Basic::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:agv_map.Fpoint.Basic.id)
}

// int32 type = 2;
inline void Fpoint_Basic::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Fpoint_Basic::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Fpoint_Basic::type() const {
  // @@protoc_insertion_point(field_get:agv_map.Fpoint.Basic.type)
  return _internal_type();
}
inline void Fpoint_Basic::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void Fpoint_Basic::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:agv_map.Fpoint.Basic.type)
}

// -------------------------------------------------------------------

// Fpoint

// .agv_map.Fpoint.Basic basic = 1;
inline bool Fpoint::_internal_has_basic() const {
  return this != internal_default_instance() && basic_ != nullptr;
}
inline bool Fpoint::has_basic() const {
  return _internal_has_basic();
}
inline void Fpoint::clear_basic() {
  if (GetArena() == nullptr && basic_ != nullptr) {
    delete basic_;
  }
  basic_ = nullptr;
}
inline const ::agv_map::Fpoint_Basic& Fpoint::_internal_basic() const {
  const ::agv_map::Fpoint_Basic* p = basic_;
  return p != nullptr ? *p : reinterpret_cast<const ::agv_map::Fpoint_Basic&>(
      ::agv_map::_Fpoint_Basic_default_instance_);
}
inline const ::agv_map::Fpoint_Basic& Fpoint::basic() const {
  // @@protoc_insertion_point(field_get:agv_map.Fpoint.basic)
  return _internal_basic();
}
inline void Fpoint::unsafe_arena_set_allocated_basic(
    ::agv_map::Fpoint_Basic* basic) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(basic_);
  }
  basic_ = basic;
  if (basic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agv_map.Fpoint.basic)
}
inline ::agv_map::Fpoint_Basic* Fpoint::release_basic() {
  
  ::agv_map::Fpoint_Basic* temp = basic_;
  basic_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::agv_map::Fpoint_Basic* Fpoint::unsafe_arena_release_basic() {
  // @@protoc_insertion_point(field_release:agv_map.Fpoint.basic)
  
  ::agv_map::Fpoint_Basic* temp = basic_;
  basic_ = nullptr;
  return temp;
}
inline ::agv_map::Fpoint_Basic* Fpoint::_internal_mutable_basic() {
  
  if (basic_ == nullptr) {
    auto* p = CreateMaybeMessage<::agv_map::Fpoint_Basic>(GetArena());
    basic_ = p;
  }
  return basic_;
}
inline ::agv_map::Fpoint_Basic* Fpoint::mutable_basic() {
  // @@protoc_insertion_point(field_mutable:agv_map.Fpoint.basic)
  return _internal_mutable_basic();
}
inline void Fpoint::set_allocated_basic(::agv_map::Fpoint_Basic* basic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete basic_;
  }
  if (basic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(basic);
    if (message_arena != submessage_arena) {
      basic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, basic, submessage_arena);
    }
    
  } else {
    
  }
  basic_ = basic;
  // @@protoc_insertion_point(field_set_allocated:agv_map.Fpoint.basic)
}

// repeated .agv_map.Param param = 2;
inline int Fpoint::_internal_param_size() const {
  return param_.size();
}
inline int Fpoint::param_size() const {
  return _internal_param_size();
}
inline void Fpoint::clear_param() {
  param_.Clear();
}
inline ::agv_map::Param* Fpoint::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:agv_map.Fpoint.param)
  return param_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Param >*
Fpoint::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:agv_map.Fpoint.param)
  return &param_;
}
inline const ::agv_map::Param& Fpoint::_internal_param(int index) const {
  return param_.Get(index);
}
inline const ::agv_map::Param& Fpoint::param(int index) const {
  // @@protoc_insertion_point(field_get:agv_map.Fpoint.param)
  return _internal_param(index);
}
inline ::agv_map::Param* Fpoint::_internal_add_param() {
  return param_.Add();
}
inline ::agv_map::Param* Fpoint::add_param() {
  // @@protoc_insertion_point(field_add:agv_map.Fpoint.param)
  return _internal_add_param();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Param >&
Fpoint::param() const {
  // @@protoc_insertion_point(field_list:agv_map.Fpoint.param)
  return param_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Area_Basic

// int32 id = 1;
inline void Area_Basic::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Area_Basic::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Area_Basic::id() const {
  // @@protoc_insertion_point(field_get:agv_map.Area.Basic.id)
  return _internal_id();
}
inline void Area_Basic::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void Area_Basic::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:agv_map.Area.Basic.id)
}

// int32 type = 2;
inline void Area_Basic::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Area_Basic::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Area_Basic::type() const {
  // @@protoc_insertion_point(field_get:agv_map.Area.Basic.type)
  return _internal_type();
}
inline void Area_Basic::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void Area_Basic::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:agv_map.Area.Basic.type)
}

// string name = 3;
inline void Area_Basic::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& Area_Basic::name() const {
  // @@protoc_insertion_point(field_get:agv_map.Area.Basic.name)
  return _internal_name();
}
inline void Area_Basic::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:agv_map.Area.Basic.name)
}
inline std::string* Area_Basic::mutable_name() {
  // @@protoc_insertion_point(field_mutable:agv_map.Area.Basic.name)
  return _internal_mutable_name();
}
inline const std::string& Area_Basic::_internal_name() const {
  return name_.Get();
}
inline void Area_Basic::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Area_Basic::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:agv_map.Area.Basic.name)
}
inline void Area_Basic::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:agv_map.Area.Basic.name)
}
inline void Area_Basic::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:agv_map.Area.Basic.name)
}
inline std::string* Area_Basic::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Area_Basic::release_name() {
  // @@protoc_insertion_point(field_release:agv_map.Area.Basic.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Area_Basic::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:agv_map.Area.Basic.name)
}

// -------------------------------------------------------------------

// Area_Coord

// sint32 x = 1;
inline void Area_Coord::clear_x() {
  x_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Area_Coord::_internal_x() const {
  return x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Area_Coord::x() const {
  // @@protoc_insertion_point(field_get:agv_map.Area.Coord.x)
  return _internal_x();
}
inline void Area_Coord::_internal_set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  x_ = value;
}
inline void Area_Coord::set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:agv_map.Area.Coord.x)
}

// sint32 y = 2;
inline void Area_Coord::clear_y() {
  y_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Area_Coord::_internal_y() const {
  return y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Area_Coord::y() const {
  // @@protoc_insertion_point(field_get:agv_map.Area.Coord.y)
  return _internal_y();
}
inline void Area_Coord::_internal_set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  y_ = value;
}
inline void Area_Coord::set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:agv_map.Area.Coord.y)
}

// -------------------------------------------------------------------

// Area

// .agv_map.Area.Basic basic = 1;
inline bool Area::_internal_has_basic() const {
  return this != internal_default_instance() && basic_ != nullptr;
}
inline bool Area::has_basic() const {
  return _internal_has_basic();
}
inline void Area::clear_basic() {
  if (GetArena() == nullptr && basic_ != nullptr) {
    delete basic_;
  }
  basic_ = nullptr;
}
inline const ::agv_map::Area_Basic& Area::_internal_basic() const {
  const ::agv_map::Area_Basic* p = basic_;
  return p != nullptr ? *p : reinterpret_cast<const ::agv_map::Area_Basic&>(
      ::agv_map::_Area_Basic_default_instance_);
}
inline const ::agv_map::Area_Basic& Area::basic() const {
  // @@protoc_insertion_point(field_get:agv_map.Area.basic)
  return _internal_basic();
}
inline void Area::unsafe_arena_set_allocated_basic(
    ::agv_map::Area_Basic* basic) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(basic_);
  }
  basic_ = basic;
  if (basic) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agv_map.Area.basic)
}
inline ::agv_map::Area_Basic* Area::release_basic() {
  
  ::agv_map::Area_Basic* temp = basic_;
  basic_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::agv_map::Area_Basic* Area::unsafe_arena_release_basic() {
  // @@protoc_insertion_point(field_release:agv_map.Area.basic)
  
  ::agv_map::Area_Basic* temp = basic_;
  basic_ = nullptr;
  return temp;
}
inline ::agv_map::Area_Basic* Area::_internal_mutable_basic() {
  
  if (basic_ == nullptr) {
    auto* p = CreateMaybeMessage<::agv_map::Area_Basic>(GetArena());
    basic_ = p;
  }
  return basic_;
}
inline ::agv_map::Area_Basic* Area::mutable_basic() {
  // @@protoc_insertion_point(field_mutable:agv_map.Area.basic)
  return _internal_mutable_basic();
}
inline void Area::set_allocated_basic(::agv_map::Area_Basic* basic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete basic_;
  }
  if (basic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(basic);
    if (message_arena != submessage_arena) {
      basic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, basic, submessage_arena);
    }
    
  } else {
    
  }
  basic_ = basic;
  // @@protoc_insertion_point(field_set_allocated:agv_map.Area.basic)
}

// map<int32, sint32> param = 2;
inline int Area::_internal_param_size() const {
  return param_.size();
}
inline int Area::param_size() const {
  return _internal_param_size();
}
inline void Area::clear_param() {
  param_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Area::_internal_param() const {
  return param_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Area::param() const {
  // @@protoc_insertion_point(field_map:agv_map.Area.param)
  return _internal_param();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Area::_internal_mutable_param() {
  return param_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Area::mutable_param() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Area.param)
  return _internal_mutable_param();
}

// repeated .agv_map.Area.Coord coord = 3;
inline int Area::_internal_coord_size() const {
  return coord_.size();
}
inline int Area::coord_size() const {
  return _internal_coord_size();
}
inline void Area::clear_coord() {
  coord_.Clear();
}
inline ::agv_map::Area_Coord* Area::mutable_coord(int index) {
  // @@protoc_insertion_point(field_mutable:agv_map.Area.coord)
  return coord_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Area_Coord >*
Area::mutable_coord() {
  // @@protoc_insertion_point(field_mutable_list:agv_map.Area.coord)
  return &coord_;
}
inline const ::agv_map::Area_Coord& Area::_internal_coord(int index) const {
  return coord_.Get(index);
}
inline const ::agv_map::Area_Coord& Area::coord(int index) const {
  // @@protoc_insertion_point(field_get:agv_map.Area.coord)
  return _internal_coord(index);
}
inline ::agv_map::Area_Coord* Area::_internal_add_coord() {
  return coord_.Add();
}
inline ::agv_map::Area_Coord* Area::add_coord() {
  // @@protoc_insertion_point(field_add:agv_map.Area.coord)
  return _internal_add_coord();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::agv_map::Area_Coord >&
Area::coord() const {
  // @@protoc_insertion_point(field_list:agv_map.Area.coord)
  return coord_;
}

// repeated int32 point_in = 4;
inline int Area::_internal_point_in_size() const {
  return point_in_.size();
}
inline int Area::point_in_size() const {
  return _internal_point_in_size();
}
inline void Area::clear_point_in() {
  point_in_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Area::_internal_point_in(int index) const {
  return point_in_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Area::point_in(int index) const {
  // @@protoc_insertion_point(field_get:agv_map.Area.point_in)
  return _internal_point_in(index);
}
inline void Area::set_point_in(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  point_in_.Set(index, value);
  // @@protoc_insertion_point(field_set:agv_map.Area.point_in)
}
inline void Area::_internal_add_point_in(::PROTOBUF_NAMESPACE_ID::int32 value) {
  point_in_.Add(value);
}
inline void Area::add_point_in(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_point_in(value);
  // @@protoc_insertion_point(field_add:agv_map.Area.point_in)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Area::_internal_point_in() const {
  return point_in_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Area::point_in() const {
  // @@protoc_insertion_point(field_list:agv_map.Area.point_in)
  return _internal_point_in();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Area::_internal_mutable_point_in() {
  return &point_in_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Area::mutable_point_in() {
  // @@protoc_insertion_point(field_mutable_list:agv_map.Area.point_in)
  return _internal_mutable_point_in();
}

// map<int32, int32> agv_num = 5;
inline int Area::_internal_agv_num_size() const {
  return agv_num_.size();
}
inline int Area::agv_num_size() const {
  return _internal_agv_num_size();
}
inline void Area::clear_agv_num() {
  agv_num_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Area::_internal_agv_num() const {
  return agv_num_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Area::agv_num() const {
  // @@protoc_insertion_point(field_map:agv_map.Area.agv_num)
  return _internal_agv_num();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Area::_internal_mutable_agv_num() {
  return agv_num_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Area::mutable_agv_num() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Area.agv_num)
  return _internal_mutable_agv_num();
}

// repeated int32 relate_area = 6;
inline int Area::_internal_relate_area_size() const {
  return relate_area_.size();
}
inline int Area::relate_area_size() const {
  return _internal_relate_area_size();
}
inline void Area::clear_relate_area() {
  relate_area_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Area::_internal_relate_area(int index) const {
  return relate_area_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Area::relate_area(int index) const {
  // @@protoc_insertion_point(field_get:agv_map.Area.relate_area)
  return _internal_relate_area(index);
}
inline void Area::set_relate_area(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  relate_area_.Set(index, value);
  // @@protoc_insertion_point(field_set:agv_map.Area.relate_area)
}
inline void Area::_internal_add_relate_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  relate_area_.Add(value);
}
inline void Area::add_relate_area(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_relate_area(value);
  // @@protoc_insertion_point(field_add:agv_map.Area.relate_area)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Area::_internal_relate_area() const {
  return relate_area_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Area::relate_area() const {
  // @@protoc_insertion_point(field_list:agv_map.Area.relate_area)
  return _internal_relate_area();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Area::_internal_mutable_relate_area() {
  return &relate_area_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Area::mutable_relate_area() {
  // @@protoc_insertion_point(field_mutable_list:agv_map.Area.relate_area)
  return _internal_mutable_relate_area();
}

// map<int32, int32> type_num = 7;
inline int Area::_internal_type_num_size() const {
  return type_num_.size();
}
inline int Area::type_num_size() const {
  return _internal_type_num_size();
}
inline void Area::clear_type_num() {
  type_num_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Area::_internal_type_num() const {
  return type_num_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
Area::type_num() const {
  // @@protoc_insertion_point(field_map:agv_map.Area.type_num)
  return _internal_type_num();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Area::_internal_mutable_type_num() {
  return type_num_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
Area::mutable_type_num() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Area.type_num)
  return _internal_mutable_type_num();
}

// -------------------------------------------------------------------

// Param

// int32 key = 1;
inline void Param::clear_key() {
  key_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Param::_internal_key() const {
  return key_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Param::key() const {
  // @@protoc_insertion_point(field_get:agv_map.Param.key)
  return _internal_key();
}
inline void Param::_internal_set_key(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  key_ = value;
}
inline void Param::set_key(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:agv_map.Param.key)
}

// sint32 value = 2;
inline void Param::clear_value() {
  value_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Param::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Param::value() const {
  // @@protoc_insertion_point(field_get:agv_map.Param.value)
  return _internal_value();
}
inline void Param::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  value_ = value;
}
inline void Param::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:agv_map.Param.value)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Describe

// map<int32, string> point_agv_desc = 1;
inline int Describe::_internal_point_agv_desc_size() const {
  return point_agv_desc_.size();
}
inline int Describe::point_agv_desc_size() const {
  return _internal_point_agv_desc_size();
}
inline void Describe::clear_point_agv_desc() {
  point_agv_desc_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::_internal_point_agv_desc() const {
  return point_agv_desc_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::point_agv_desc() const {
  // @@protoc_insertion_point(field_map:agv_map.Describe.point_agv_desc)
  return _internal_point_agv_desc();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::_internal_mutable_point_agv_desc() {
  return point_agv_desc_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::mutable_point_agv_desc() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Describe.point_agv_desc)
  return _internal_mutable_point_agv_desc();
}

// map<int32, string> point_ctl_desc = 2;
inline int Describe::_internal_point_ctl_desc_size() const {
  return point_ctl_desc_.size();
}
inline int Describe::point_ctl_desc_size() const {
  return _internal_point_ctl_desc_size();
}
inline void Describe::clear_point_ctl_desc() {
  point_ctl_desc_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::_internal_point_ctl_desc() const {
  return point_ctl_desc_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::point_ctl_desc() const {
  // @@protoc_insertion_point(field_map:agv_map.Describe.point_ctl_desc)
  return _internal_point_ctl_desc();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::_internal_mutable_point_ctl_desc() {
  return point_ctl_desc_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::mutable_point_ctl_desc() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Describe.point_ctl_desc)
  return _internal_mutable_point_ctl_desc();
}

// map<int32, string> point_avo_desc = 3;
inline int Describe::_internal_point_avo_desc_size() const {
  return point_avo_desc_.size();
}
inline int Describe::point_avo_desc_size() const {
  return _internal_point_avo_desc_size();
}
inline void Describe::clear_point_avo_desc() {
  point_avo_desc_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::_internal_point_avo_desc() const {
  return point_avo_desc_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::point_avo_desc() const {
  // @@protoc_insertion_point(field_map:agv_map.Describe.point_avo_desc)
  return _internal_point_avo_desc();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::_internal_mutable_point_avo_desc() {
  return point_avo_desc_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::mutable_point_avo_desc() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Describe.point_avo_desc)
  return _internal_mutable_point_avo_desc();
}

// map<int32, string> seg_agv_desc = 4;
inline int Describe::_internal_seg_agv_desc_size() const {
  return seg_agv_desc_.size();
}
inline int Describe::seg_agv_desc_size() const {
  return _internal_seg_agv_desc_size();
}
inline void Describe::clear_seg_agv_desc() {
  seg_agv_desc_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::_internal_seg_agv_desc() const {
  return seg_agv_desc_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::seg_agv_desc() const {
  // @@protoc_insertion_point(field_map:agv_map.Describe.seg_agv_desc)
  return _internal_seg_agv_desc();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::_internal_mutable_seg_agv_desc() {
  return seg_agv_desc_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::mutable_seg_agv_desc() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Describe.seg_agv_desc)
  return _internal_mutable_seg_agv_desc();
}

// map<int32, string> seg_ctl_desc = 5;
inline int Describe::_internal_seg_ctl_desc_size() const {
  return seg_ctl_desc_.size();
}
inline int Describe::seg_ctl_desc_size() const {
  return _internal_seg_ctl_desc_size();
}
inline void Describe::clear_seg_ctl_desc() {
  seg_ctl_desc_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::_internal_seg_ctl_desc() const {
  return seg_ctl_desc_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::seg_ctl_desc() const {
  // @@protoc_insertion_point(field_map:agv_map.Describe.seg_ctl_desc)
  return _internal_seg_ctl_desc();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::_internal_mutable_seg_ctl_desc() {
  return seg_ctl_desc_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::mutable_seg_ctl_desc() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Describe.seg_ctl_desc)
  return _internal_mutable_seg_ctl_desc();
}

// map<int32, string> seg_avo_desc = 6;
inline int Describe::_internal_seg_avo_desc_size() const {
  return seg_avo_desc_.size();
}
inline int Describe::seg_avo_desc_size() const {
  return _internal_seg_avo_desc_size();
}
inline void Describe::clear_seg_avo_desc() {
  seg_avo_desc_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::_internal_seg_avo_desc() const {
  return seg_avo_desc_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::seg_avo_desc() const {
  // @@protoc_insertion_point(field_map:agv_map.Describe.seg_avo_desc)
  return _internal_seg_avo_desc();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::_internal_mutable_seg_avo_desc() {
  return seg_avo_desc_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::mutable_seg_avo_desc() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Describe.seg_avo_desc)
  return _internal_mutable_seg_avo_desc();
}

// map<int32, string> fpoint_desc = 7;
inline int Describe::_internal_fpoint_desc_size() const {
  return fpoint_desc_.size();
}
inline int Describe::fpoint_desc_size() const {
  return _internal_fpoint_desc_size();
}
inline void Describe::clear_fpoint_desc() {
  fpoint_desc_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::_internal_fpoint_desc() const {
  return fpoint_desc_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::fpoint_desc() const {
  // @@protoc_insertion_point(field_map:agv_map.Describe.fpoint_desc)
  return _internal_fpoint_desc();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::_internal_mutable_fpoint_desc() {
  return fpoint_desc_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::mutable_fpoint_desc() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Describe.fpoint_desc)
  return _internal_mutable_fpoint_desc();
}

// map<int32, .agv_map.AreaDesc> area_desc = 8;
inline int Describe::_internal_area_desc_size() const {
  return area_desc_.size();
}
inline int Describe::area_desc_size() const {
  return _internal_area_desc_size();
}
inline void Describe::clear_area_desc() {
  area_desc_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::AreaDesc >&
Describe::_internal_area_desc() const {
  return area_desc_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::AreaDesc >&
Describe::area_desc() const {
  // @@protoc_insertion_point(field_map:agv_map.Describe.area_desc)
  return _internal_area_desc();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::AreaDesc >*
Describe::_internal_mutable_area_desc() {
  return area_desc_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::agv_map::AreaDesc >*
Describe::mutable_area_desc() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Describe.area_desc)
  return _internal_mutable_area_desc();
}

// map<int32, string> cargo_area_desc = 9;
inline int Describe::_internal_cargo_area_desc_size() const {
  return cargo_area_desc_.size();
}
inline int Describe::cargo_area_desc_size() const {
  return _internal_cargo_area_desc_size();
}
inline void Describe::clear_cargo_area_desc() {
  cargo_area_desc_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::_internal_cargo_area_desc() const {
  return cargo_area_desc_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
Describe::cargo_area_desc() const {
  // @@protoc_insertion_point(field_map:agv_map.Describe.cargo_area_desc)
  return _internal_cargo_area_desc();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::_internal_mutable_cargo_area_desc() {
  return cargo_area_desc_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
Describe::mutable_cargo_area_desc() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.Describe.cargo_area_desc)
  return _internal_mutable_cargo_area_desc();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AreaDesc

// string type = 1;
inline void AreaDesc::clear_type() {
  type_.ClearToEmpty();
}
inline const std::string& AreaDesc::type() const {
  // @@protoc_insertion_point(field_get:agv_map.AreaDesc.type)
  return _internal_type();
}
inline void AreaDesc::set_type(const std::string& value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:agv_map.AreaDesc.type)
}
inline std::string* AreaDesc::mutable_type() {
  // @@protoc_insertion_point(field_mutable:agv_map.AreaDesc.type)
  return _internal_mutable_type();
}
inline const std::string& AreaDesc::_internal_type() const {
  return type_.Get();
}
inline void AreaDesc::_internal_set_type(const std::string& value) {
  
  type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AreaDesc::set_type(std::string&& value) {
  
  type_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:agv_map.AreaDesc.type)
}
inline void AreaDesc::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:agv_map.AreaDesc.type)
}
inline void AreaDesc::set_type(const char* value,
    size_t size) {
  
  type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:agv_map.AreaDesc.type)
}
inline std::string* AreaDesc::_internal_mutable_type() {
  
  return type_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AreaDesc::release_type() {
  // @@protoc_insertion_point(field_release:agv_map.AreaDesc.type)
  return type_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AreaDesc::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:agv_map.AreaDesc.type)
}

// map<int32, string> desc = 2;
inline int AreaDesc::_internal_desc_size() const {
  return desc_.size();
}
inline int AreaDesc::desc_size() const {
  return _internal_desc_size();
}
inline void AreaDesc::clear_desc() {
  desc_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
AreaDesc::_internal_desc() const {
  return desc_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >&
AreaDesc::desc() const {
  // @@protoc_insertion_point(field_map:agv_map.AreaDesc.desc)
  return _internal_desc();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
AreaDesc::_internal_mutable_desc() {
  return desc_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, std::string >*
AreaDesc::mutable_desc() {
  // @@protoc_insertion_point(field_mutable_map:agv_map.AreaDesc.desc)
  return _internal_mutable_desc();
}

// -------------------------------------------------------------------

// Store_offset

// .agv_map.store_offset_by_layer layer1 = 1;
inline bool Store_offset::_internal_has_layer1() const {
  return this != internal_default_instance() && layer1_ != nullptr;
}
inline bool Store_offset::has_layer1() const {
  return _internal_has_layer1();
}
inline void Store_offset::clear_layer1() {
  if (GetArena() == nullptr && layer1_ != nullptr) {
    delete layer1_;
  }
  layer1_ = nullptr;
}
inline const ::agv_map::store_offset_by_layer& Store_offset::_internal_layer1() const {
  const ::agv_map::store_offset_by_layer* p = layer1_;
  return p != nullptr ? *p : reinterpret_cast<const ::agv_map::store_offset_by_layer&>(
      ::agv_map::_store_offset_by_layer_default_instance_);
}
inline const ::agv_map::store_offset_by_layer& Store_offset::layer1() const {
  // @@protoc_insertion_point(field_get:agv_map.Store_offset.layer1)
  return _internal_layer1();
}
inline void Store_offset::unsafe_arena_set_allocated_layer1(
    ::agv_map::store_offset_by_layer* layer1) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(layer1_);
  }
  layer1_ = layer1;
  if (layer1) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agv_map.Store_offset.layer1)
}
inline ::agv_map::store_offset_by_layer* Store_offset::release_layer1() {
  
  ::agv_map::store_offset_by_layer* temp = layer1_;
  layer1_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::agv_map::store_offset_by_layer* Store_offset::unsafe_arena_release_layer1() {
  // @@protoc_insertion_point(field_release:agv_map.Store_offset.layer1)
  
  ::agv_map::store_offset_by_layer* temp = layer1_;
  layer1_ = nullptr;
  return temp;
}
inline ::agv_map::store_offset_by_layer* Store_offset::_internal_mutable_layer1() {
  
  if (layer1_ == nullptr) {
    auto* p = CreateMaybeMessage<::agv_map::store_offset_by_layer>(GetArena());
    layer1_ = p;
  }
  return layer1_;
}
inline ::agv_map::store_offset_by_layer* Store_offset::mutable_layer1() {
  // @@protoc_insertion_point(field_mutable:agv_map.Store_offset.layer1)
  return _internal_mutable_layer1();
}
inline void Store_offset::set_allocated_layer1(::agv_map::store_offset_by_layer* layer1) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete layer1_;
  }
  if (layer1) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(layer1);
    if (message_arena != submessage_arena) {
      layer1 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, layer1, submessage_arena);
    }
    
  } else {
    
  }
  layer1_ = layer1;
  // @@protoc_insertion_point(field_set_allocated:agv_map.Store_offset.layer1)
}

// .agv_map.store_offset_by_layer layer2 = 2;
inline bool Store_offset::_internal_has_layer2() const {
  return this != internal_default_instance() && layer2_ != nullptr;
}
inline bool Store_offset::has_layer2() const {
  return _internal_has_layer2();
}
inline void Store_offset::clear_layer2() {
  if (GetArena() == nullptr && layer2_ != nullptr) {
    delete layer2_;
  }
  layer2_ = nullptr;
}
inline const ::agv_map::store_offset_by_layer& Store_offset::_internal_layer2() const {
  const ::agv_map::store_offset_by_layer* p = layer2_;
  return p != nullptr ? *p : reinterpret_cast<const ::agv_map::store_offset_by_layer&>(
      ::agv_map::_store_offset_by_layer_default_instance_);
}
inline const ::agv_map::store_offset_by_layer& Store_offset::layer2() const {
  // @@protoc_insertion_point(field_get:agv_map.Store_offset.layer2)
  return _internal_layer2();
}
inline void Store_offset::unsafe_arena_set_allocated_layer2(
    ::agv_map::store_offset_by_layer* layer2) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(layer2_);
  }
  layer2_ = layer2;
  if (layer2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agv_map.Store_offset.layer2)
}
inline ::agv_map::store_offset_by_layer* Store_offset::release_layer2() {
  
  ::agv_map::store_offset_by_layer* temp = layer2_;
  layer2_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::agv_map::store_offset_by_layer* Store_offset::unsafe_arena_release_layer2() {
  // @@protoc_insertion_point(field_release:agv_map.Store_offset.layer2)
  
  ::agv_map::store_offset_by_layer* temp = layer2_;
  layer2_ = nullptr;
  return temp;
}
inline ::agv_map::store_offset_by_layer* Store_offset::_internal_mutable_layer2() {
  
  if (layer2_ == nullptr) {
    auto* p = CreateMaybeMessage<::agv_map::store_offset_by_layer>(GetArena());
    layer2_ = p;
  }
  return layer2_;
}
inline ::agv_map::store_offset_by_layer* Store_offset::mutable_layer2() {
  // @@protoc_insertion_point(field_mutable:agv_map.Store_offset.layer2)
  return _internal_mutable_layer2();
}
inline void Store_offset::set_allocated_layer2(::agv_map::store_offset_by_layer* layer2) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete layer2_;
  }
  if (layer2) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(layer2);
    if (message_arena != submessage_arena) {
      layer2 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, layer2, submessage_arena);
    }
    
  } else {
    
  }
  layer2_ = layer2;
  // @@protoc_insertion_point(field_set_allocated:agv_map.Store_offset.layer2)
}

// .agv_map.store_offset_by_layer layer3 = 3;
inline bool Store_offset::_internal_has_layer3() const {
  return this != internal_default_instance() && layer3_ != nullptr;
}
inline bool Store_offset::has_layer3() const {
  return _internal_has_layer3();
}
inline void Store_offset::clear_layer3() {
  if (GetArena() == nullptr && layer3_ != nullptr) {
    delete layer3_;
  }
  layer3_ = nullptr;
}
inline const ::agv_map::store_offset_by_layer& Store_offset::_internal_layer3() const {
  const ::agv_map::store_offset_by_layer* p = layer3_;
  return p != nullptr ? *p : reinterpret_cast<const ::agv_map::store_offset_by_layer&>(
      ::agv_map::_store_offset_by_layer_default_instance_);
}
inline const ::agv_map::store_offset_by_layer& Store_offset::layer3() const {
  // @@protoc_insertion_point(field_get:agv_map.Store_offset.layer3)
  return _internal_layer3();
}
inline void Store_offset::unsafe_arena_set_allocated_layer3(
    ::agv_map::store_offset_by_layer* layer3) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(layer3_);
  }
  layer3_ = layer3;
  if (layer3) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agv_map.Store_offset.layer3)
}
inline ::agv_map::store_offset_by_layer* Store_offset::release_layer3() {
  
  ::agv_map::store_offset_by_layer* temp = layer3_;
  layer3_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::agv_map::store_offset_by_layer* Store_offset::unsafe_arena_release_layer3() {
  // @@protoc_insertion_point(field_release:agv_map.Store_offset.layer3)
  
  ::agv_map::store_offset_by_layer* temp = layer3_;
  layer3_ = nullptr;
  return temp;
}
inline ::agv_map::store_offset_by_layer* Store_offset::_internal_mutable_layer3() {
  
  if (layer3_ == nullptr) {
    auto* p = CreateMaybeMessage<::agv_map::store_offset_by_layer>(GetArena());
    layer3_ = p;
  }
  return layer3_;
}
inline ::agv_map::store_offset_by_layer* Store_offset::mutable_layer3() {
  // @@protoc_insertion_point(field_mutable:agv_map.Store_offset.layer3)
  return _internal_mutable_layer3();
}
inline void Store_offset::set_allocated_layer3(::agv_map::store_offset_by_layer* layer3) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete layer3_;
  }
  if (layer3) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(layer3);
    if (message_arena != submessage_arena) {
      layer3 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, layer3, submessage_arena);
    }
    
  } else {
    
  }
  layer3_ = layer3;
  // @@protoc_insertion_point(field_set_allocated:agv_map.Store_offset.layer3)
}

// .agv_map.store_offset_by_layer layer4 = 4;
inline bool Store_offset::_internal_has_layer4() const {
  return this != internal_default_instance() && layer4_ != nullptr;
}
inline bool Store_offset::has_layer4() const {
  return _internal_has_layer4();
}
inline void Store_offset::clear_layer4() {
  if (GetArena() == nullptr && layer4_ != nullptr) {
    delete layer4_;
  }
  layer4_ = nullptr;
}
inline const ::agv_map::store_offset_by_layer& Store_offset::_internal_layer4() const {
  const ::agv_map::store_offset_by_layer* p = layer4_;
  return p != nullptr ? *p : reinterpret_cast<const ::agv_map::store_offset_by_layer&>(
      ::agv_map::_store_offset_by_layer_default_instance_);
}
inline const ::agv_map::store_offset_by_layer& Store_offset::layer4() const {
  // @@protoc_insertion_point(field_get:agv_map.Store_offset.layer4)
  return _internal_layer4();
}
inline void Store_offset::unsafe_arena_set_allocated_layer4(
    ::agv_map::store_offset_by_layer* layer4) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(layer4_);
  }
  layer4_ = layer4;
  if (layer4) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:agv_map.Store_offset.layer4)
}
inline ::agv_map::store_offset_by_layer* Store_offset::release_layer4() {
  
  ::agv_map::store_offset_by_layer* temp = layer4_;
  layer4_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::agv_map::store_offset_by_layer* Store_offset::unsafe_arena_release_layer4() {
  // @@protoc_insertion_point(field_release:agv_map.Store_offset.layer4)
  
  ::agv_map::store_offset_by_layer* temp = layer4_;
  layer4_ = nullptr;
  return temp;
}
inline ::agv_map::store_offset_by_layer* Store_offset::_internal_mutable_layer4() {
  
  if (layer4_ == nullptr) {
    auto* p = CreateMaybeMessage<::agv_map::store_offset_by_layer>(GetArena());
    layer4_ = p;
  }
  return layer4_;
}
inline ::agv_map::store_offset_by_layer* Store_offset::mutable_layer4() {
  // @@protoc_insertion_point(field_mutable:agv_map.Store_offset.layer4)
  return _internal_mutable_layer4();
}
inline void Store_offset::set_allocated_layer4(::agv_map::store_offset_by_layer* layer4) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete layer4_;
  }
  if (layer4) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(layer4);
    if (message_arena != submessage_arena) {
      layer4 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, layer4, submessage_arena);
    }
    
  } else {
    
  }
  layer4_ = layer4;
  // @@protoc_insertion_point(field_set_allocated:agv_map.Store_offset.layer4)
}

// -------------------------------------------------------------------

// store_offset_by_layer

// float high = 1;
inline void store_offset_by_layer::clear_high() {
  high_ = 0;
}
inline float store_offset_by_layer::_internal_high() const {
  return high_;
}
inline float store_offset_by_layer::high() const {
  // @@protoc_insertion_point(field_get:agv_map.store_offset_by_layer.high)
  return _internal_high();
}
inline void store_offset_by_layer::_internal_set_high(float value) {
  
  high_ = value;
}
inline void store_offset_by_layer::set_high(float value) {
  _internal_set_high(value);
  // @@protoc_insertion_point(field_set:agv_map.store_offset_by_layer.high)
}

// float horizontal_offset = 2;
inline void store_offset_by_layer::clear_horizontal_offset() {
  horizontal_offset_ = 0;
}
inline float store_offset_by_layer::_internal_horizontal_offset() const {
  return horizontal_offset_;
}
inline float store_offset_by_layer::horizontal_offset() const {
  // @@protoc_insertion_point(field_get:agv_map.store_offset_by_layer.horizontal_offset)
  return _internal_horizontal_offset();
}
inline void store_offset_by_layer::_internal_set_horizontal_offset(float value) {
  
  horizontal_offset_ = value;
}
inline void store_offset_by_layer::set_horizontal_offset(float value) {
  _internal_set_horizontal_offset(value);
  // @@protoc_insertion_point(field_set:agv_map.store_offset_by_layer.horizontal_offset)
}

// float vertical_offset = 3;
inline void store_offset_by_layer::clear_vertical_offset() {
  vertical_offset_ = 0;
}
inline float store_offset_by_layer::_internal_vertical_offset() const {
  return vertical_offset_;
}
inline float store_offset_by_layer::vertical_offset() const {
  // @@protoc_insertion_point(field_get:agv_map.store_offset_by_layer.vertical_offset)
  return _internal_vertical_offset();
}
inline void store_offset_by_layer::_internal_set_vertical_offset(float value) {
  
  vertical_offset_ = value;
}
inline void store_offset_by_layer::set_vertical_offset(float value) {
  _internal_set_vertical_offset(value);
  // @@protoc_insertion_point(field_set:agv_map.store_offset_by_layer.vertical_offset)
}

// float fork_high_offset = 4;
inline void store_offset_by_layer::clear_fork_high_offset() {
  fork_high_offset_ = 0;
}
inline float store_offset_by_layer::_internal_fork_high_offset() const {
  return fork_high_offset_;
}
inline float store_offset_by_layer::fork_high_offset() const {
  // @@protoc_insertion_point(field_get:agv_map.store_offset_by_layer.fork_high_offset)
  return _internal_fork_high_offset();
}
inline void store_offset_by_layer::_internal_set_fork_high_offset(float value) {
  
  fork_high_offset_ = value;
}
inline void store_offset_by_layer::set_fork_high_offset(float value) {
  _internal_set_fork_high_offset(value);
  // @@protoc_insertion_point(field_set:agv_map.store_offset_by_layer.fork_high_offset)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace agv_map

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_agv_5fmap_2eproto
